{"version":3,"sources":["assets/images/auth.jpg","assets/images/logo.svg","components/RouteWithLayout/RouteWithLayout.js","layouts/Main/components/Footer/Footer.js","layouts/Main/components/Sidebar/components/Profile/Profile.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/Main.js","layouts/Minimal/components/Topbar/Topbar.js","layouts/Minimal/Minimal.js","api/serverUrl.js","pages/SignIn/style.js","pages/SignIn/signin.js","pages/ServiceRequest/style.js","pages/ServiceRequest/Component/requestmodal.js","pages/ServiceRequest/Component/addrequestmodal.js","pages/ServiceRequest/Component/maildialog.js","pages/ServiceRequest/servicerequest.js","pages/User/style.js","pages/User/user.js","pages/Account/components/AccountDetails/AccountDetails.js","pages/Account/components/AccountProfile/AccountProfile.js","pages/Account/Account.js","pages/Customer/style.js","pages/Customer/customer.js","pages/Racket/style.js","pages/Racket/racket.js","pages/String/style.js","pages/String/string.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","redux/UserRedux.js","redux/ConfigRedux.js","redux/index.js","store/store.js","i18n.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RouteWithLayout","props","Layout","layout","Component","component","rest","render","matchProps","useStyles","makeStyles","theme","root","padding","spacing","Footer","className","classes","t","useTranslation","clsx","Typography","variant","Link","target","display","flexDirection","alignItems","minHeight","avatar","width","height","name","marginTop","Profile","user","useSelector","state","fullName","bio","userRole","Avatar","alt","toUpperCase","RouterLink","src","to","item","paddingTop","paddingBottom","button","color","colors","blueGrey","justifyContent","textTransform","letterSpacing","fontWeight","typography","fontWeightMedium","icon","palette","marginRight","active","primary","main","CustomRouterLink","forwardRef","ref","style","flexGrow","SidebarNav","pages","List","map","page","ListItem","disableGutters","key","title","Button","activeClassName","href","drawer","breakpoints","up","backgroundColor","white","divider","margin","nav","marginBottom","Sidebar","open","onClose","unshift","Drawer","anchor","paper","Divider","boxShadow","signOutButton","marginLeft","Topbar","onSidebarOpen","onSignOut","dispatch","useDispatch","i18n","language","config","React","useState","anchorEl","setAnchorEl","selectLanguage","event","currentTarget","closeLanguage","countryCode","changeLanguage","type","data","AppBar","require","Hidden","mdDown","IconButton","onClick","Badge","svg","lgUp","id","keepMounted","Boolean","MenuItem","ListItemIcon","fontSize","lineHeight","ListItemText","shiftContent","paddingLeft","content","Main","children","history","useHistory","useTheme","isDesktop","useMediaQuery","defaultMatches","openSidebar","setOpenSidebar","signedIn","useEffect","push","shouldOpenSidebar","serverUrl","background","default","grid","quoteContainer","down","quote","neutral","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","quoteInner","textAlign","flexBasis","quoteText","contentContainer","contentHeader","paddingBototm","paddingRight","logoImage","contentBody","form","socialButtons","socialIcon","sugestion","textField","signInButton","axios","Signin","pageStyle","signInFailed","setSignInFailed","username","setUsername","password","setPassword","Grid","container","lg","person","xs","onSubmit","post","pass","then","response","exist","res","setTimeout","catch","error","console","log","gutterBottom","Alert","severity","AlertTitle","fullWidth","label","value","onChange","validators","errorMessages","size","cardRoot","formControl1","minWidth","px10","dlgTitle","formControl","formControlLabel","ServiceRequest","opened","onUpdate","refData","setRefData","sports","newCustomer","setNewCustomer","newRacket","setNewRacket","newString","setNewString","Date","curData","setCurData","handleClose","handleDataChange","handleNewCustomerChange","handleNewRacketChange","handleNewStringChange","Fragment","Dialog","maxWidth","onEntered","date","customerType","racketType","stringType","aria-labelledby","DialogTitle","DialogContent","res1","agentId","toString","reqPickTime","confPickTime","location","payed","status","customerId","Customer","racketId","Racket","stringId","String","realdata","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","Paper","RadioGroup","row","aria-label","defaultValue","FormControlLabel","control","Radio","md","FormControl","Select","labelId","customers","firstName","lastName","sportsClub","required","street","number","ZIPcode","city","eMail","phone","rackets","sportType","Brand","Name","Grip","strings","Thickness","Color","Hardness","InputLabel","htmlFor","DateTimePicker","inputVariant","disabled","users","DialogActions","onAdd","userId","initCustomer","initRacket","initString","initCurData","flg","data1","i","length","onSend","toClient","undefined","toAgent","User","racketInfo","dateInfo","m_date","temp","getDate","getMonth","getFullYear","getDateFormat","timeInfo","getHours","getMinutes","getTimeFormat","MailInfo","from","subject","slice","text","Table","table","TableBody","TableRow","TableCell","scope","split","val","index","MaterialTableDemo","openDlg","setOpenDlg","openMailDlg","setOpenMailDlg","openAddDlg","setOpenAddDlg","mailType","setMailType","compareFunction","a","b","abc","abcd","toLowerCase","columns","field","customSort","customFilterAndSearch","term","rowData","includes","lookup","2","1","0","4","3","setData","ThickNess","getRequests","useCallback","tt","onDlgClose","Card","components","Toolbar","options","search","filtering","pageSize","cellStyle","border","headerStyle","filterCellStyle","localization","body","emptyDataSourceMessage","addTooltip","deleteTooltip","editTooltip","filterRow","filterTooltip","editRow","deleteText","cancelTooltip","saveTooltip","grouping","placeholder","header","actions","pagination","labelDisplayedRows","labelRowsSelect","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","toolbar","addRemoveColumns","nRowsSelected","showColumnsTitle","showColumnsAriaLabel","exportTitle","exportAriaLabel","exportName","searchTooltip","searchPlaceholder","tooltip","updateData","JSON","stringify","newData","alert","getUsers","editable","onRowAdd","Promise","resolve","userInfo","onRowUpdate","oldData","newUserData","indexOf","onRowDelete","AccountDetails","role","setUserInfo","handleChange","getUser","CardHeader","subheader","CardContent","CardActions","details","flexShrink","progress","uploadButton","AccountProfile","alertId","setAlertId","opass","setOpass","setPass","confirm","setConfirm","parseInt","Account","xl","getCustomers","sorting","customerInfo","getRackets","td","tempD","newRacketData","sportTypes","getStrings","stringInfo","black","contrastText","dark","indigo","light","secondary","blue","success","green","info","warning","orange","red","link","grey","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","borderBottom","MuiTableHead","MuiTypography","createMuiTheme","overrides","zIndex","appBar","initialState","storage","blacklist","persistCombineReducers","action","middleware","thunk","store","compose","applyMiddleware","createStore","reducers","persistor","persistStore","use","Backend","initReactI18next","init","lng","backend","loadPath","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","App","ThemeProvider","loading","fallback","ServiceRequestView","exact","MainLayout","path","UserView","AccountView","CustomerView","RacketView","StringView","SignInView","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2e78909e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/auth.10c5bb3b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.4a57404b.svg\";","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst RouteWithLayout = props => {\n  const { layout: Layout, component: Component, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <Layout>\n          <Component {...matchProps} />\n        </Layout>\n      )}\n    />\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\n\nexport default RouteWithLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Link } from '@material-ui/core';\n\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Footer = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const { t } = useTranslation();\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography variant=\"body1\">\n        &copy;{' '}\n        <Link\n          component=\"a\"\n          target=\"_blank\"\n        >\n          Donald Schulz Sport\n        </Link>\n        . 2020\n      </Typography>\n      <Typography variant=\"caption\">\n        {t('footerCaption.label')}\n      </Typography>\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Typography } from '@material-ui/core';\nimport { useSelector } from 'react-redux'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    minHeight: 'fit-content'\n  },\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Profile = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const user = {\n    name: useSelector(state => state.user.fullName),\n    avatar: '/images/avatars/avatar_11.png',\n    bio: useSelector(state => state.user.userRole) ? \"Agent\" : \"Admin\"\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Avatar\n        alt={user.name.toUpperCase()}\n        className={classes.avatar}\n        component={RouterLink}\n        src={user.avatar}\n        to=\"/settings\"\n      />\n      <Typography\n        className={classes.name}\n        variant=\"h4\"\n      >\n        {user.name}\n      </Typography>\n      <Typography variant=\"body2\">{user.bio}</Typography>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { List, ListItem, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div\n    ref={ref}\n    style={{ flexGrow: 1 }}\n  >\n    <RouterLink {...props} />\n  </div>\n));\n\nconst SidebarNav = props => {\n  const { pages, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <List\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {pages.map(page => (\n        <ListItem\n          className={classes.item}\n          disableGutters\n          key={page.title}\n        >\n          <Button\n            activeClassName={classes.active}\n            className={classes.button}\n            component={CustomRouterLink}\n            to={page.href}\n          >\n            <div className={classes.icon}>{page.icon}</div>\n            {page.title}\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired\n};\n\nexport default SidebarNav;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Divider, Drawer } from '@material-ui/core';\nimport PeopleIcon from '@material-ui/icons/People';\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport SportsTennisIcon from '@material-ui/icons/SportsTennis';\nimport TextureIcon from '@material-ui/icons/Texture';\n\nimport { useSelector } from 'react-redux'\n\nimport { Profile, SidebarNav} from './components';\n\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: 240,\n    [theme.breakpoints.up('lg')]: {\n      marginTop: 64,\n      height: 'calc(100% - 64px)'\n    }\n  },\n  root: {\n    backgroundColor: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    padding: theme.spacing(2)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  nav: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Sidebar = props => {\n  const { open, variant, onClose, className, ...rest } = props;\n\n  const classes = useStyles();\n  const userRole = useSelector(state => state.user.userRole);\n  \n  const { t } = useTranslation()\n\n  const pages = [\n    {\n      title: t('ServiceRequest.label'),\n      href: '/servicerequest',\n      icon: <ShoppingBasketIcon />\n    },\n    {\n      title: t('Customer.label'),\n      href: '/customer',\n      icon: <SupervisorAccountIcon />\n    },\n    {\n      title: t('Racket.label'),\n      href: '/racket',\n      icon: <SportsTennisIcon />\n    },\n    {\n      title: t('String.label'),\n      href: '/string',\n      icon: <TextureIcon />\n    },\n    {\n      title: t('AccountSetting.label'),\n      href: '/account',\n      icon: <AccountBoxIcon />\n    },\n  ];\n\n  if(userRole === 0)\n  {\n    pages.unshift({\n      title: t('Users.label'),\n      href: '/users',\n      icon: <PeopleIcon />\n    })\n  }\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant={variant}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <Profile />\n        <Divider className={classes.divider} />\n        <SidebarNav\n          className={classes.nav}\n          pages={pages}\n        />\n      </div>\n    </Drawer>\n  );\n};\n\nSidebar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  variant: PropTypes.string.isRequired\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar, Badge, Hidden, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ReactCountryFlag from \"react-country-flag\"\nimport InputIcon from '@material-ui/icons/Input';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: 'none'\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  signOutButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Topbar = props => {\n  const { className, onSidebarOpen, onSignOut, ...rest } = props;\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { t, i18n } = useTranslation()\n\n  const language = useSelector(state => state.config.language);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const selectLanguage = (event) => {\n    setAnchorEl(event.currentTarget);\n  }\n\n  const closeLanguage = (countryCode = \"\") => {\n    setAnchorEl(null);\n    if(countryCode === \"GB\" || countryCode === \"DE\"){\n      i18n.changeLanguage(countryCode === \"GB\" ? \"en\" :\"de\");\n      dispatch({ type: \"Set_Language\", data: countryCode}); \n    }\n  }\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <img\n            alt=\"Logo\"\n            src={require(\"../../../../assets/images/logo.svg\")}\n          />\n        </RouterLink>\n        <div className={classes.flexGrow} />\n        <Hidden mdDown>\n          <IconButton color=\"inherit\" onClick={selectLanguage}>\n            <Badge\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <ReactCountryFlag countryCode={language} svg />\n            </Badge>\n          </IconButton>\n          <IconButton\n            className={classes.signOutButton}\n            color=\"inherit\"\n            onClick={onSignOut}\n          >\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton color=\"inherit\" onClick={selectLanguage}>\n            <Badge\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <ReactCountryFlag countryCode={language} svg />\n            </Badge>\n          </IconButton>\n          <IconButton\n            className={classes.signOutButton}\n            color=\"inherit\"\n            onClick={onSignOut}\n          >\n            <InputIcon />\n          </IconButton>\n          <IconButton\n            color=\"inherit\"\n            onClick={onSidebarOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={closeLanguage}\n        >\n          <MenuItem onClick={() => closeLanguage(\"DE\")}>\n            <ListItemIcon>\n              <ReactCountryFlag\n                countryCode=\"DE\" \n                style={{\n                    fontSize: '2em',\n                    lineHeight: '2em',\n                }} \n                svg />\n            </ListItemIcon>\n            <ListItemText primary={t('german.label')} />\n          </MenuItem>\n          <MenuItem onClick={() => closeLanguage(\"GB\")}> \n            <ListItemIcon>\n              <ReactCountryFlag \n                countryCode=\"GB\" \n                style={{\n                  fontSize: '2em',\n                  lineHeight: '2em',\n                }} \n                svg \n                />\n            </ListItemIcon>\n            <ListItemText primary={t('english.label')} />\n          </MenuItem>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  onSidebarOpen: PropTypes.func\n};\n\nexport default Topbar;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\n\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Sidebar, Topbar, Footer } from './components';\n\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 56,\n    height: '100%',\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: 64\n    }\n  },\n  shiftContent: {\n    paddingLeft: 240\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Main = props => {\n  const { children } = props;\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n\n  const [openSidebar, setOpenSidebar] = useState(false);\n\n  const signedIn = useSelector(state => state.user.signedIn);\n  const language = useSelector(state => state.config.language);\n\n  const {i18n} = useTranslation();\n\n  useEffect(() => {\n    if(!signedIn){\n      history.push('/signin');\n    }\n    if(language === \"GB\" && i18n.language !== \"en\")\n      i18n.changeLanguage(\"en\");\n    else if(language === \"DE\" && i18n.language !== \"de\")\n      i18n.changeLanguage(\"de\");\n  });\n\n  const handleSidebarOpen = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleSidebarClose = () => {\n    setOpenSidebar(false);\n  };\n\n  const handleSignOut = () => {\n    dispatch({ type: \"Set_UserLogOut\"});\n    history.push(\"/signin\");\n  }\n\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\n\n  return (\n    <div\n      className={clsx({\n        [classes.root]: true,\n        [classes.shiftContent]: isDesktop\n      })}\n    >\n      <Topbar onSidebarOpen={handleSidebarOpen} onSignOut={handleSignOut}/>\n      <Sidebar\n        onClose={handleSidebarClose}\n        open={shouldOpenSidebar}\n        variant={isDesktop ? 'persistent' : 'temporary'}\n      />\n      <main className={classes.content}>\n        {children}\n        <Footer />\n      </main>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    boxShadow: 'none'\n  }\n}));\n\nconst Topbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n      color=\"primary\"\n      position=\"fixed\"\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <img\n            alt=\"Logo\"\n            src=\"/images/logos/logo--white.svg\"\n          />\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Topbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Topbar } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    paddingTop: 64,\n    height: '100%'\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Minimal = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Topbar />\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nMinimal.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\nexport default Minimal;\n","export const serverUrl = \"http://www.ds-enterprise.de:3100/\"\r\n//export const serverUrl = \"http://localhost:3100/\"","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n        height: '100%'\r\n    },\r\n    grid: {\r\n        height: '100%'\r\n    },\r\n    quoteContainer: {\r\n        [theme.breakpoints.down('md')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    quote: {\r\n        backgroundColor: theme.palette.neutral,\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundImage: 'url(' + require(\"../../assets/images/auth.jpg\") + ')',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center'\r\n    },\r\n    quoteInner: {\r\n        textAlign: 'center',\r\n        flexBasis: '600px'\r\n    },\r\n    quoteText: {\r\n        color: theme.palette.white,\r\n        fontWeight: 300\r\n    },\r\n    name: {\r\n        marginTop: theme.spacing(3),\r\n        color: theme.palette.white\r\n    },\r\n    bio: {\r\n        color: theme.palette.white\r\n    },\r\n    contentContainer: {\r\n    },\r\n    content: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    contentHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingTop: theme.spacing(5),\r\n        paddingBototm: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    logoImage: {\r\n        marginLeft: theme.spacing(4)\r\n    },\r\n    contentBody: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            justifyContent: 'center'\r\n        }\r\n    },\r\n    form: {\r\n        paddingLeft: 100,\r\n        paddingRight: 100,\r\n        paddingBottom: 125,\r\n        flexBasis: 700,\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(2)\r\n        }\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialButtons: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    sugestion: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    textField: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    signInButton: {\r\n        margin: theme.spacing(2, 0)\r\n    }\r\n }));\r\n\r\n export default useStyles;","import React from 'react';\r\nimport {\r\n   Grid,\r\n   Button,\r\n   Typography\r\n} from '@material-ui/core';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { useDispatch } from 'react-redux'\r\nimport { serverUrl } from '../../api/serverUrl';\r\nimport { default as pageStyle } from './style';\r\n\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst axios = require('axios');\r\n\r\nexport default function Signin(props) {\r\n\r\n   const classes = pageStyle();\r\n   let history = useHistory();\r\n   const dispatch = useDispatch();\r\n\r\n   const { i18n } = useTranslation()\r\n\r\n   const [signInFailed, setSignInFailed] = React.useState(0);\r\n   const [username, setUsername] = React.useState(\"\");\r\n   const [password, setPassword] = React.useState(\"\");\r\n\r\n   const handleSignIn = () => {\r\n      axios.post(serverUrl + 'signin', {\r\n         name: username,\r\n         pass: password\r\n      })\r\n      .then(function (response){\r\n         if(response.data.exist){\r\n            const res = response.data;\r\n            dispatch({ type: \"Set_UserData\", data: res}); \r\n            dispatch({ type: \"Set_Language\", data: \"DE\"});\r\n            i18n.changeLanguage(\"de\");\r\n            history.push('/servicerequest');\r\n         }\r\n         else{\r\n            setSignInFailed(1);\r\n            setTimeout(function(){\r\n               setSignInFailed(0);\r\n            },3000);\r\n         }\r\n      })\r\n      .catch(function (error){\r\n         console.log(error);\r\n      })\r\n   }\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n      >\r\n         <Grid\r\n            className={classes.quoteContainer}\r\n            item\r\n            lg={5}\r\n         >\r\n            <div className={classes.quote}>\r\n               <div className={classes.quoteInner}>\r\n                  <Typography\r\n                     className={classes.quoteText}\r\n                     variant=\"h1\"\r\n                  >\r\n                     Hella narwhal Cosby sweater McSweeney's, salvia kitsch before\r\n                     they sold out High Life.\r\n                  </Typography>\r\n                  <div className={classes.person}>\r\n                     <Typography\r\n                        className={classes.name}\r\n                        variant=\"body1\"\r\n                     >\r\n                        Takamaru Ayako\r\n                     </Typography>\r\n                     <Typography\r\n                        className={classes.bio}\r\n                        variant=\"body2\"\r\n                     >\r\n                        Manager at inVision\r\n                     </Typography>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </Grid>\r\n         <Grid\r\n            className={classes.content}\r\n            item\r\n            lg={7}\r\n            xs={12}\r\n         >\r\n            <div className={classes.content}>\r\n               <div className={classes.contentBody}>\r\n                  <ValidatorForm\r\n                     className={classes.form}\r\n                     onSubmit={handleSignIn}\r\n                  >\r\n                     <Typography\r\n                        className={classes.title}\r\n                        variant=\"h2\"\r\n                     >\r\n                        Willkommen\r\n                     </Typography>\r\n                     <Typography\r\n                        color=\"textSecondary\"\r\n                        gutterBottom\r\n                     >\r\n                        Herzlich Willkommen im Besaitungs-Portal von Donald Schulz Sport\r\n                     </Typography>\r\n                     {\r\n                        signInFailed === 1 && (\r\n                           <Alert severity=\"error\">\r\n                              <AlertTitle>Fehler bei der Anmeldung</AlertTitle>\r\n                              Falscher Benutzername und/oder Passwort\r\n                           </Alert>\r\n                        )\r\n                     }\r\n                     <TextValidator \r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        label=\"Benutzername\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        variant=\"outlined\"\r\n                        onChange={(event)=>setUsername(event.target.value)}\r\n                        validators={['required']}\r\n                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                     />\r\n                     <TextValidator \r\n                        className={classes.textField}\r\n                        fullWidth\r\n                        label=\"Passwort\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        variant=\"outlined\"\r\n                        onChange={(event)=>setPassword(event.target.value)}\r\n                        validators={['required']}\r\n                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                     />\r\n                     <Button\r\n                        className={classes.signInButton}\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                     >\r\n                        Anmelden\r\n                     </Button>\r\n                  </ValidatorForm>\r\n               </div>\r\n            </div>\r\n         </Grid>\r\n      </Grid>\r\n    </div>\r\n   );\r\n}\r\n\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n        minHeight: 'calc(100% - 103px)'\r\n    },\r\n    cardRoot: {\r\n        padding: 16,\r\n        background: 'none',\r\n        boxShadow: 'none !important',\r\n    },\r\n    grid: {\r\n        height: '100%'\r\n    },\r\n    quoteContainer: {\r\n        [theme.breakpoints.down('md')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    quote: {\r\n        backgroundColor: theme.palette.neutral,\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundImage: 'url(' + require(\"../../assets/images/auth.jpg\") + ')',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center'\r\n    },\r\n    quoteInner: {\r\n        textAlign: 'center',\r\n        flexBasis: '600px'\r\n    },\r\n    quoteText: {\r\n        color: theme.palette.white,\r\n        fontWeight: 300\r\n    },\r\n    name: {\r\n        marginTop: theme.spacing(3),\r\n        color: theme.palette.white\r\n    },\r\n    bio: {\r\n        color: theme.palette.white\r\n    },\r\n    contentContainer: {\r\n    },\r\n    content: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    contentHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingTop: theme.spacing(5),\r\n        paddingBototm: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    logoImage: {\r\n        marginLeft: theme.spacing(4)\r\n    },\r\n    contentBody: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            justifyContent: 'center'\r\n        }\r\n    },\r\n    form: {\r\n        paddingLeft: 100,\r\n        paddingRight: 100,\r\n        paddingBottom: 125,\r\n        flexBasis: 700,\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(2)\r\n        }\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialButtons: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    sugestion: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    textField: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    signInButton: {\r\n        margin: theme.spacing(2, 0)\r\n    }\r\n }));\r\n\r\n export default useStyles;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Paper, RadioGroup, FormControlLabel, Radio,\r\n        FormControl, InputLabel, Select, MenuItem, Grid} from '@material-ui/core';\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport { useTranslation } from 'react-i18next'\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { serverUrl } from '../../../api/serverUrl';\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl1: {\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  px10: {\r\n      padding: 10,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n  },\r\n  dlgTitle: {\r\n    fontSize: '17px !important',\r\n    fontWeight: 'bold',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function ServiceRequest(props) {\r\n    const classes = useStyles();\r\n    const { opened, onUpdate, onClose, data} = props;\r\n    const { t } = useTranslation();\r\n    const [refData, setRefData] = React.useState([]);\r\n    \r\n    const userRole = useSelector(state => state.user.userRole);\r\n    \r\n    const sports = [t('Badminton.label'), t('Tennis.label'), t('Squash.label')]\r\n    const [newCustomer, setNewCustomer] = React.useState({\r\n        \"firstName\": \"\",\r\n        \"lastName\": \"\",\r\n        \"sportsClub\": \"\",\r\n        \"street\": \"\",\r\n        \"number\": 0,\r\n        \"ZIPcode\": 0,\r\n        \"city\": \"\",\r\n        \"eMail\": \"\",\r\n        \"phone\": \"\"\r\n    });\r\n    const [newRacket, setNewRacket] = React.useState({\r\n        \"sportType\": 0,\r\n        \"Brand\": \"\",\r\n        \"Name\": \"\",\r\n        \"Grip\": \"\"\r\n    });\r\n    const [newString, setNewString] = React.useState({\r\n        \"Brand\": \"\",\r\n        \"Name\": \"\",\r\n        \"Thickness\": 0,\r\n        \"Color\": \"\",\r\n        \"Hardness\": 0\r\n    });\r\n    const [curData, setCurData] = React.useState({\r\n        \"id\": 0,\r\n        \"date\": new Date(),\r\n        \"agentId\": 0,\r\n        \"customerId\": 0,\r\n        \"racketId\": 0,\r\n        \"stringId\": 0,\r\n        \"status\": 0,\r\n        \"reqPickTime\": null,\r\n        \"location\": \"\",\r\n        \"confPickTime\": null,\r\n        \"payed\": \"\",\r\n        \"User\": {\r\n            \"id\": 0,\r\n            \"firstName\": \"\",\r\n            \"lastName\": \"\",\r\n        },\r\n        \"Racket\": {\r\n            \"id\": 0,\r\n            \"sportType\": 0,\r\n            \"Brand\": \"\",\r\n            \"Name\": \"\",\r\n            \"Grip\": \"\"\r\n        },\r\n        \"String\": {\r\n            \"id\": 0,\r\n            \"Brand\": \"\",\r\n            \"Name\": \"\",\r\n            \"Thickness\": 0,\r\n            \"Color\": \"\",\r\n            \"Hardness\": 0\r\n        },\r\n        \"Customer\": {\r\n            \"id\": 0,\r\n            \"firstName\": \"\",\r\n            \"lastName\": \"\",\r\n            \"sportsClub\": \"\",\r\n        }\r\n    });\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const onEntered = () => {\r\n        setCurData({...data, \r\n            date: new Date(data.date),\r\n            customerType: \"0\",\r\n            racketType: \"0\",\r\n            stringType: \"0\",\r\n        });\r\n\r\n        axios.post(serverUrl + 'service/getData')\r\n        .then(function (response){\r\n            setRefData(response.data);\r\n        })\r\n        .catch(function (error){\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const handleDateChange = (value) => {\r\n        setCurData({\r\n            ...curData,\r\n            date: value\r\n        });\r\n    }\r\n\r\n    const handleDataChange = (event) => {\r\n        setCurData({\r\n            ...curData,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    \r\n    const handleNewCustomerChange = (event) => {\r\n        setNewCustomer({\r\n            ...newCustomer,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleNewRacketChange = (event) => {\r\n        setNewRacket({\r\n            ...newRacket,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleNewStringChange = (event) => {\r\n        setNewString({\r\n            ...newString,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleReqDateChange = (event) => {\r\n        setCurData({\r\n            ...curData,\r\n            reqPickTime: event\r\n        });\r\n    }\r\n\r\n    const handleConfDateChange = (event) => {\r\n        setCurData({\r\n            ...curData,\r\n            confPickTime: event\r\n        });\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        var res1 = {};\r\n        var res = {};\r\n\r\n        res.id = curData.id;\r\n        res.agentId = curData.agentId;\r\n        \r\n        res.date = curData.date.toString();\r\n        res.reqPickTime = new Date(curData.reqPickTime).toString();\r\n        res.confPickTime = new Date(curData.confPickTime).toString();\r\n        res.location = curData.location;\r\n        res.payed = curData.payed;\r\n        res.status = curData.status;\r\n        if(curData.customerType === \"0\")\r\n            res.customerId = curData.customerId;\r\n        else\r\n            res1.Customer = newCustomer;\r\n        if(curData.racketType === \"0\")\r\n            res.racketId = curData.racketId;\r\n        else\r\n            res1.Racket = newRacket;\r\n        if(curData.stringType === \"0\")\r\n            res.stringId = curData.stringId;\r\n        else\r\n            res1.String = newString;\r\n        res1.realdata = res;\r\n        onUpdate(res1);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <Dialog\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            open={opened}\r\n            onEntered={onEntered}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"max-width-dialog-title\"><div className={classes.dlgTitle}>{t('ServiceRequest.label')}</div></DialogTitle>\r\n            <Divider/>\r\n            <DialogContent>\r\n                <ValidatorForm onSubmit={onSubmit}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label={t('Date.label')}\r\n                            value={curData.date}\r\n                            name=\"date\"\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <Paper variant=\"outlined\" className={classes.px10}>\r\n                        <RadioGroup row aria-label=\"position\" onChange={handleDataChange} name=\"customerType\" defaultValue=\"0\">\r\n                            <FormControlLabel value=\"0\" control={<Radio color=\"primary\" />} label={t('SelExCst.label')} />\r\n                            <FormControlLabel value=\"1\" control={<Radio color=\"primary\" />} label={t('ANCst.label')} />\r\n                        </RadioGroup>\r\n                        {\r\n                            curData.customerType === \"0\" ? (\r\n                                <Grid\r\n                                    container\r\n                                    spacing={3}\r\n                                >\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                        <FormControl className={classes.formControl} fullWidth>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-outlined-label\"\r\n                                                id=\"demo-simple-select-outlined\"\r\n                                                value={curData.customerId}\r\n                                                onChange={handleDataChange}\r\n                                                name={\"customerId\"}\r\n                                                label=\"Age\"\r\n                                            >\r\n                                            {\r\n                                                refData.customers && refData.customers.map(data => (\r\n                                                    <MenuItem key={data.id} value={data.id}>{data.firstName+\" \"+data.lastName+\" : \"+data.sportsClub}</MenuItem>\r\n                                                ))   \r\n                                            } \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            ): (\r\n                                <Grid\r\n                                    container\r\n                                    spacing={3}\r\n                                >\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('FirstName.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"firstName\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        required\r\n                                        value={newCustomer.firstName}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('LastName.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"lastName\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        required\r\n                                        value={newCustomer.lastName}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('Street.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"street\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        required\r\n                                        value={newCustomer.street}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('Number.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"number\"\r\n                                        type=\"number\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        value={newCustomer.number}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('ZIPcode.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"ZIPcode\"\r\n                                        type=\"number\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        value={newCustomer.ZIPcode}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('City.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"city\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        required\r\n                                        value={newCustomer.city}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={12}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('SportsClub.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"sportsClub\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        required\r\n                                        value={newCustomer.sportsClub}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('EmailAddress.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"eMail\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        required\r\n                                        value={newCustomer.eMail}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('PhoneNumber.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"phone\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        value={newCustomer.phone}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    </Paper>\r\n                    <Paper variant=\"outlined\" className={classes.px10}>\r\n                        <RadioGroup row aria-label=\"position\" onChange={handleDataChange} name=\"racketType\" defaultValue=\"0\">\r\n                            <FormControlLabel value=\"0\" control={<Radio color=\"primary\" />} label={t('SelExRckt.label')} />\r\n                            <FormControlLabel value=\"1\" control={<Radio color=\"primary\" />} label={t('ANRckt.label')} />\r\n                        </RadioGroup>\r\n                        {\r\n                            curData.racketType === \"0\" ? (\r\n                                <Grid\r\n                                    container\r\n                                    spacing={3}\r\n                                >\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <FormControl className={classes.formControl} fullWidth>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            id=\"demo-simple-select-outlined\"\r\n                                            value={curData.racketId}\r\n                                            onChange={handleDataChange}\r\n                                            name={\"racketId\"}\r\n                                        >\r\n                                        {\r\n                                            refData.rackets && refData.rackets.map(data => (\r\n                                                <MenuItem key={data.id} value={data.id}>{sports[data.sportType]+\" : \"+data.Brand+\" : \"+data.Name+\" : \"+data.Grip}</MenuItem>\r\n                                            ))   \r\n                                        }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            ): (\r\n                                <Grid\r\n                                    container\r\n                                    spacing={3}\r\n                                >\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <FormControl className={classes.formControl} fullWidth>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            value={newRacket.sportType}\r\n                                            onChange={handleNewRacketChange}\r\n                                            name={\"sportType\"}\r\n                                            fullWidth\r\n                                        >\r\n                                            <MenuItem value={0}>{t('Badminton.label')}</MenuItem>\r\n                                            <MenuItem value={1}>{t('Tennis.label')}</MenuItem>\r\n                                            <MenuItem value={2}>{t('Squash.label')}</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                        <TextValidator \r\n                                            fullWidth\r\n                                            label={t('RacketBrand.label')}\r\n                                            margin=\"dense\"\r\n                                            name=\"Brand\"\r\n                                            onChange={handleNewRacketChange}\r\n                                            required\r\n                                            value={newRacket.Brand}\r\n                                            variant=\"outlined\"\r\n                                            validators={['required']}\r\n                                            errorMessages={['Feld muss ausgefüllt werden']}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('RacketName.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"Name\"\r\n                                        onChange={handleNewRacketChange}\r\n                                        required\r\n                                        value={newRacket.Name}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('RacketGrip.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"Grip\"\r\n                                        onChange={handleNewRacketChange}\r\n                                        required\r\n                                        value={newRacket.Grip}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    </Paper>\r\n                    <Paper variant=\"outlined\" className={classes.px10}>\r\n                        <RadioGroup row aria-label=\"position\" onChange={handleDataChange} name=\"stringType\" defaultValue=\"0\">\r\n                            <FormControlLabel value=\"0\" control={<Radio color=\"primary\" />} label={t('SelExStr.label')} />\r\n                            <FormControlLabel value=\"1\" control={<Radio color=\"primary\" />} label={t('ANStr.label')} />\r\n                        </RadioGroup>\r\n                        {\r\n                            curData.stringType === \"0\" ? (\r\n                                <Grid\r\n                                    container\r\n                                    spacing={3}\r\n                                >\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <FormControl className={classes.formControl} fullWidth>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            id=\"demo-simple-select-outlined\"\r\n                                            value={curData.stringId}\r\n                                            onChange={handleDataChange}\r\n                                            name={\"stringId\"}\r\n                                        >\r\n                                        {\r\n                                            refData.strings && refData.strings.map(data => (\r\n                                                <MenuItem key={data.id} value={data.id}>{data.Brand+\" : \"+data.Name+\" : \"+data.Thickness+\" : \"+data.Color+\" : \"+data.Hardness}</MenuItem>\r\n                                            ))   \r\n                                        }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            ): (\r\n                                <Grid\r\n                                    container\r\n                                    spacing={3}\r\n                                >\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                        <TextValidator \r\n                                            fullWidth\r\n                                            label={t('StringBrand.label')}\r\n                                            margin=\"dense\"\r\n                                            name=\"Brand\"\r\n                                            onChange={handleNewStringChange}\r\n                                            required\r\n                                            value={newString.Brand}\r\n                                            variant=\"outlined\"\r\n                                            validators={['required']}\r\n                                            errorMessages={['Feld muss ausgefüllt werden']}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                        <TextValidator \r\n                                            fullWidth\r\n                                            label={t('StringName.label')}\r\n                                            margin=\"dense\"\r\n                                            name=\"Name\"\r\n                                            onChange={handleNewStringChange}\r\n                                            required\r\n                                            value={newString.Name}\r\n                                            variant=\"outlined\"\r\n                                            validators={['required']}\r\n                                            errorMessages={['Feld muss ausgefüllt werden']}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('StringThickness.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"Thickness\"\r\n                                        onChange={handleNewStringChange}\r\n                                        type=\"number\"\r\n                                        required\r\n                                        value={newString.Thickness}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('StringColor.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"Color\"\r\n                                        onChange={handleNewStringChange}\r\n                                        required\r\n                                        value={newString.Color}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('StringHardness.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"Hardness\"\r\n                                        onChange={handleNewStringChange}\r\n                                        required\r\n                                        type=\"number\"\r\n                                        value={newString.Hardness}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    </Paper>\r\n                    <Grid\r\n                        container\r\n                        spacing={3}\r\n                    >\r\n                        <Grid\r\n                        item\r\n                        md={4}\r\n                        xs={12}\r\n                        >\r\n                            <FormControl variant=\"outlined\" className={classes.formControl1} fullWidth>\r\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">{t('status.label')}</InputLabel>\r\n                                <Select\r\n                                    label={t('status.label')}\r\n                                    value={curData.status}\r\n                                    onChange={handleDataChange}\r\n                                    margin=\"dense\"\r\n                                    name={\"status\"}\r\n                                >\r\n                                    <MenuItem value={0}>{t('statusVal0.label')}</MenuItem>\r\n                                    <MenuItem value={1}>{t('statusVal1.label')}</MenuItem>\r\n                                    <MenuItem value={2}>{t('statusVal2.label')}</MenuItem>\r\n                                    <MenuItem value={3}>{t('statusVal3.label')}</MenuItem>\r\n                                    <MenuItem value={4}>{t('statusVal4.label')}</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid\r\n                        item\r\n                        md={4}\r\n                        xs={12}>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <DateTimePicker\r\n                                    fullWidth\r\n                                    format=\"yyyy-MM-dd HH:mm\"\r\n                                    margin=\"dense\"\r\n                                    label={t('RequestedPickUpDateTime.label')}\r\n                                    inputVariant=\"outlined\"\r\n                                    value={curData.reqPickTime}\r\n                                    name=\"reqPickTime\"\r\n                                    onChange={handleReqDateChange}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </Grid>\r\n                        <Grid\r\n                        item\r\n                        md={4}\r\n                        xs={12}>\r\n                            <TextValidator \r\n                                fullWidth\r\n                                label={t('location.label')}\r\n                                margin=\"dense\"\r\n                                name=\"location\"\r\n                                onChange={handleDataChange}\r\n                                required\r\n                                value={curData.location}\r\n                                variant=\"outlined\"\r\n                                validators={['required']}\r\n                                errorMessages={['Feld muss ausgefüllt werden']}\r\n                            />\r\n                        </Grid>\r\n                        <Grid\r\n                        item\r\n                        md={4}\r\n                        xs={12}\r\n                        >\r\n                            <FormControl variant=\"outlined\" className={classes.formControl1} fullWidth>\r\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">{t('Agent.label')}</InputLabel>\r\n                                <Select\r\n                                    label={t('Agent.label')}\r\n                                    value={curData.agentId}\r\n                                    onChange={handleDataChange}\r\n                                    margin=\"dense\"\r\n                                    disabled={userRole === 0 ? false : true}\r\n                                    name={\"agentId\"}\r\n                                >{\r\n                                    refData.users && refData.users.map(data => (\r\n                                        <MenuItem key={data.id} value={data.id}>{data.firstName+\" : \"+data.lastName}</MenuItem>\r\n                                    ))   \r\n                                }</Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid\r\n                        item\r\n                        md={4}\r\n                        xs={12}>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <DateTimePicker\r\n                                    fullWidth\r\n                                    format=\"yyyy-MM-dd HH:mm\"\r\n                                    margin=\"dense\"\r\n                                    disabled={userRole === 0 ? false : true}\r\n                                    label={t('ConfirmedPickUpDateTime.label')}\r\n                                    inputVariant=\"outlined\"\r\n                                    value={curData.confPickTime && curData.confPickTime}\r\n                                    name=\"confPickTime\"\r\n                                    onChange={handleConfDateChange}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </Grid>\r\n                        <Grid\r\n                        item\r\n                        md={4}\r\n                        xs={12}\r\n                        >\r\n                            <FormControl variant=\"outlined\" className={classes.formControl1} fullWidth>\r\n                                <InputLabel >{t('Payed.label')}</InputLabel>\r\n                                <Select\r\n                                    label={t('Payed.label')}\r\n                                    value={curData.payed}\r\n                                    onChange={handleDataChange}\r\n                                    margin=\"dense\"\r\n                                    disabled={userRole === 0 ? false : true}\r\n                                    name={\"payed\"}\r\n                                >\r\n                                    <MenuItem value=\"bar\">{t('pay0.label')}</MenuItem>\r\n                                    <MenuItem value=\"sumup\">{t('pay1.label')}</MenuItem>\r\n                                    <MenuItem value=\"no\">{t('pay2.label')}</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider/>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                            {t('Update.label')}\r\n                        </Button>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            {t('Close.label')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </DialogContent>\r\n        </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Paper, RadioGroup, FormControlLabel, Radio,\r\n        FormControl, InputLabel, Select, MenuItem, Grid} from '@material-ui/core';\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport { useTranslation } from 'react-i18next'\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { serverUrl } from '../../../api/serverUrl';\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl1: {\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  px10: {\r\n      padding: 10,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n  },\r\n  dlgTitle: {\r\n    fontSize: '17px !important',\r\n    fontWeight: 'bold',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function ServiceRequest(props) {\r\n    const classes = useStyles();\r\n    const { opened, onAdd, onClose, data} = props;\r\n    const { t } = useTranslation();\r\n    const [refData, setRefData] = React.useState([]);\r\n    \r\n    const userId = useSelector(state => state.user.userId);\r\n    \r\n    const sports = [t('Badminton.label'), t('Tennis.label'), t('Squash.label')]\r\n\r\n    const initCustomer = {\r\n        \"firstName\": \"\",\r\n        \"lastName\": \"\",\r\n        \"sportsClub\": \"\",\r\n        \"street\": \"\",\r\n        \"number\": 0,\r\n        \"ZIPcode\": 0,\r\n        \"city\": \"\",\r\n        \"eMail\": \"\",\r\n        \"phone\": \"\"\r\n    }\r\n    const initRacket = {\r\n        \"sportType\": 0,\r\n        \"Brand\": \"\",\r\n        \"Name\": \"\",\r\n        \"Grip\": \"\"\r\n    };\r\n    const initString = {\r\n        \"Brand\": \"\",\r\n        \"Name\": \"\",\r\n        \"Thickness\": 0,\r\n        \"Color\": \"\",\r\n        \"Hardness\": 0\r\n    }\r\n    const initCurData = {\r\n        \"id\": 0,\r\n        \"date\": new Date(),\r\n        \"agentId\": 0,\r\n        \"customerId\": 0,\r\n        \"racketId\": 0,\r\n        \"stringId\": 0,\r\n        \"status\": 0,\r\n        \"reqPickTime\": null,\r\n        \"location\": \"\",\r\n        \"confPickTime\": null,\r\n        \"payed\": \"\",\r\n        \"User\": {\r\n            \"id\": 0,\r\n            \"firstName\": \"\",\r\n            \"lastName\": \"\",\r\n        },\r\n        \"Racket\": {\r\n            \"id\": 0,\r\n            \"sportType\": 0,\r\n            \"Brand\": \"\",\r\n            \"Name\": \"\",\r\n            \"Grip\": \"\"\r\n        },\r\n        \"String\": {\r\n            \"id\": 0,\r\n            \"Brand\": \"\",\r\n            \"Name\": \"\",\r\n            \"Thickness\": 0,\r\n            \"Color\": \"\",\r\n            \"Hardness\": 0\r\n        },\r\n        \"Customer\": {\r\n            \"id\": 0,\r\n            \"firstName\": \"\",\r\n            \"lastName\": \"\",\r\n            \"sportsClub\": \"\",\r\n        },\r\n        customerType: \"0\",\r\n        racketType: \"0\",\r\n        stringType: \"0\",\r\n    }\r\n    const [newCustomer, setNewCustomer] = React.useState(initCustomer);\r\n    const [newRacket, setNewRacket] = React.useState(initRacket);\r\n    const [newString, setNewString] = React.useState(initString);\r\n    const [curData, setCurData] = React.useState(initCurData);\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    const onEntered = () => {\r\n        setCurData(initCurData);\r\n        setNewString(initString);\r\n        setNewRacket(initRacket);\r\n        setNewCustomer(initCustomer);\r\n        \r\n        axios.post(serverUrl + 'service/getData')\r\n        .then(function (response){\r\n            setRefData(response.data);\r\n        })\r\n        .catch(function (error){\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const handleDateChange = (value) => {\r\n        setCurData({\r\n            ...curData,\r\n            date: value\r\n        });\r\n    }\r\n\r\n    const handleDataChange = (event) => {\r\n        setCurData({\r\n            ...curData,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    \r\n    const handleNewCustomerChange = (event) => {\r\n        setNewCustomer({\r\n            ...newCustomer,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleNewRacketChange = (event) => {\r\n        setNewRacket({\r\n            ...newRacket,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleNewStringChange = (event) => {\r\n        setNewString({\r\n            ...newString,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    const handleReqDateChange = (event) => {\r\n        setCurData({\r\n            ...curData,\r\n            reqPickTime: event\r\n        });\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        var res1 = {};\r\n        var res = {};\r\n\r\n        var flg = 0;\r\n        res.agentId = userId;\r\n        \r\n        res.stringId = curData.stringId;\r\n        res.racketId = curData.racketId;\r\n        res.date = curData.date.toString();\r\n        res.reqPickTime = new Date(curData.reqPickTime).toString();\r\n        res.confPickTime = new Date().toString();\r\n        res.location = curData.location;\r\n        res.payed = curData.payed;\r\n        res.status = curData.status;\r\n        if(curData.customerType === \"0\" && curData.customerId === 0)\r\n            flg = 1;\r\n        else if (curData.customerType === \"0\" && curData.customerId !== 0)\r\n            res.customerId = curData.customerId;\r\n        else\r\n            res1.Customer = newCustomer;\r\n        if(curData.racketType === \"0\" && curData.racketId === 0)\r\n            flg = 1;\r\n        else if (curData.racketType === \"0\" && curData.racketId !== 0)\r\n            res.racketId = curData.racketId;\r\n        else\r\n            res1.Racket = newRacket;\r\n        if(curData.stringType === \"0\" && curData.stringId === 0)\r\n            flg = 1;\r\n        else if(curData.stringType === \"0\" && curData.stringId !== 0)\r\n            res.stringId = curData.stringId;\r\n        else\r\n            res1.String = newString;\r\n        if(flg === 0)\r\n        {\r\n            res1.realdata = res;\r\n            res1.realdata.payed = \"no\";\r\n            onAdd(res1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <Dialog\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            open={opened}\r\n            onEntered={onEntered}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"max-width-dialog-title\"><div className={classes.dlgTitle}>{t('ServiceRequest.label')}</div></DialogTitle>\r\n            <Divider/>\r\n            <DialogContent>\r\n                <ValidatorForm onSubmit={onSubmit}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label={t('Date.label')}\r\n                            value={curData.date}\r\n                            name=\"date\"\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <Paper variant=\"outlined\" className={classes.px10}>\r\n                        <RadioGroup row aria-label=\"position\" onChange={handleDataChange} name=\"customerType\" defaultValue=\"0\">\r\n                            <FormControlLabel value=\"0\" control={<Radio color=\"primary\" />} label={t('SelExCst.label')} />\r\n                            <FormControlLabel value=\"1\" control={<Radio color=\"primary\" />} label={t('ANCst.label')} />\r\n                        </RadioGroup>\r\n                        {\r\n                            curData.customerType === \"0\" ? (\r\n                                <Grid\r\n                                    container\r\n                                    spacing={3}\r\n                                >\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                        <FormControl className={classes.formControl} fullWidth>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-outlined-label\"\r\n                                                id=\"demo-simple-select-outlined\"\r\n                                                value={curData.customerId}\r\n                                                onChange={handleDataChange}\r\n                                                name={\"customerId\"}\r\n                                                label=\"Age\"\r\n                                            >\r\n                                            {\r\n                                                refData.customers && refData.customers.map(data => (\r\n                                                    <MenuItem key={data.id} value={data.id}>{data.firstName+\" \"+data.lastName+\" : \"+data.sportsClub}</MenuItem>\r\n                                                ))   \r\n                                            } \r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            ): (\r\n                                <Grid\r\n                                    container\r\n                                    spacing={3}\r\n                                >\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('FirstName.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"firstName\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        required\r\n                                        value={newCustomer.firstName}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('LastName.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"lastName\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        required\r\n                                        value={newCustomer.lastName}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('Street.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"street\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        required\r\n                                        value={newCustomer.street}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('Number.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"number\"\r\n                                        type=\"number\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        value={newCustomer.number}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('ZIPcode.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"ZIPcode\"\r\n                                        type=\"number\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        value={newCustomer.ZIPcode}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('City.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"city\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        required\r\n                                        value={newCustomer.city}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={12}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('SportsClub.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"sportsClub\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        required\r\n                                        value={newCustomer.sportsClub}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('EmailAddress.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"eMail\"\r\n                                        type=\"email\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        required\r\n                                        value={newCustomer.eMail}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required','isEmail']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden','Email is not valid']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('PhoneNumber.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"phone\"\r\n                                        onChange={handleNewCustomerChange}\r\n                                        value={newCustomer.phone}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    </Paper>\r\n                    <Paper variant=\"outlined\" className={classes.px10}>\r\n                        <RadioGroup row aria-label=\"position\" onChange={handleDataChange} name=\"racketType\" defaultValue=\"0\">\r\n                            <FormControlLabel value=\"0\" control={<Radio color=\"primary\" />} label={t('SelExRckt.label')} />\r\n                            <FormControlLabel value=\"1\" control={<Radio color=\"primary\" />} label={t('ANRckt.label')} />\r\n                        </RadioGroup>\r\n                        {\r\n                            curData.racketType === \"0\" ? (\r\n                                <Grid\r\n                                    container\r\n                                    spacing={3}\r\n                                >\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <FormControl className={classes.formControl} fullWidth>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            id=\"demo-simple-select-outlined\"\r\n                                            value={curData.racketId}\r\n                                            onChange={handleDataChange}\r\n                                            name={\"racketId\"}\r\n                                        >\r\n                                        {\r\n                                            curData.customerType === \"0\" && curData.customerId !== 0 && refData.rackets && refData.rackets.map(data1 => {\r\n                                                for(var i = 0 ; i < data.length ; i ++){\r\n                                                    if(curData.customerId === data[i].Customer.id && data1.id === data[i].Racket.id)\r\n                                                        return (<MenuItem key={data1.id} value={data1.id}>{sports[data1.sportType]+\" : \"+data1.Brand+\" : \"+data1.Name+\" : \"+data1.Grip}</MenuItem>)\r\n                                                }\r\n                                                return (null)\r\n                                            })   \r\n                                        }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            ): (\r\n                                <Grid\r\n                                    container\r\n                                    spacing={3}\r\n                                >\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <FormControl className={classes.formControl} fullWidth>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            value={newRacket.sportType}\r\n                                            onChange={handleNewRacketChange}\r\n                                            name={\"sportType\"}\r\n                                            fullWidth\r\n                                        >\r\n                                            <MenuItem value={0}>{t('Badminton.label')}</MenuItem>\r\n                                            <MenuItem value={1}>{t('Tennis.label')}</MenuItem>\r\n                                            <MenuItem value={2}>{t('Squash.label')}</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                        <TextValidator \r\n                                            fullWidth\r\n                                            label={t('RacketBrand.label')}\r\n                                            margin=\"dense\"\r\n                                            name=\"Brand\"\r\n                                            onChange={handleNewRacketChange}\r\n                                            required\r\n                                            value={newRacket.Brand}\r\n                                            variant=\"outlined\"\r\n                                            validators={['required']}\r\n                                            errorMessages={['Feld muss ausgefüllt werden']}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('RacketName.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"Name\"\r\n                                        onChange={handleNewRacketChange}\r\n                                        required\r\n                                        value={newRacket.Name}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('RacketGrip.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"Grip\"\r\n                                        onChange={handleNewRacketChange}\r\n                                        required\r\n                                        value={newRacket.Grip}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    </Paper>\r\n                    <Paper variant=\"outlined\" className={classes.px10}>\r\n                        <RadioGroup row aria-label=\"position\" onChange={handleDataChange} name=\"stringType\" defaultValue=\"0\">\r\n                            <FormControlLabel value=\"0\" control={<Radio color=\"primary\" />} label={t('SelExStr.label')} />\r\n                            <FormControlLabel value=\"1\" control={<Radio color=\"primary\" />} label={t('ANStr.label')} />\r\n                        </RadioGroup>\r\n                        {\r\n                            curData.stringType === \"0\" ? (\r\n                                <Grid\r\n                                    container\r\n                                    spacing={3}\r\n                                >\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <FormControl className={classes.formControl} fullWidth>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            id=\"demo-simple-select-outlined\"\r\n                                            value={curData.stringId}\r\n                                            onChange={handleDataChange}\r\n                                            name={\"stringId\"}\r\n                                        >\r\n                                        {\r\n                                            curData.customerType === \"0\" && curData.customerId !== 0 && curData.racketType === \"0\" && curData.racketId !== 0 && refData.strings && refData.strings.map(data1 => {\r\n                                                for(var i = 0 ; i < data.length ; i ++){\r\n                                                    if(curData.customerId === data[i].Customer.id && curData.racketId === data[i].Racket.id && data1.id === data[i].String.id)\r\n                                                        return (<MenuItem key={data1.id} value={data1.id}>{data1.Brand+\" : \"+data1.Name+\" : \"+data1.Thickness+\" : \"+data1.Color+\" : \"+data1.Hardness}</MenuItem>)\r\n                                                }\r\n                                                return (null)\r\n                                            })   \r\n                                        }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            ): (\r\n                                <Grid\r\n                                    container\r\n                                    spacing={3}\r\n                                >\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                        <TextValidator \r\n                                            fullWidth\r\n                                            label={t('StringBrand.label')}\r\n                                            margin=\"dense\"\r\n                                            name=\"Brand\"\r\n                                            onChange={handleNewStringChange}\r\n                                            required\r\n                                            value={newString.Brand}\r\n                                            variant=\"outlined\"\r\n                                            validators={['required']}\r\n                                            errorMessages={['Feld muss ausgefüllt werden']}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                        <TextValidator \r\n                                            fullWidth\r\n                                            label={t('StringName.label')}\r\n                                            margin=\"dense\"\r\n                                            name=\"Name\"\r\n                                            onChange={handleNewStringChange}\r\n                                            required\r\n                                            value={newString.Name}\r\n                                            variant=\"outlined\"\r\n                                            validators={['required']}\r\n                                            errorMessages={['Feld muss ausgefüllt werden']}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('StringThickness.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"Thickness\"\r\n                                        onChange={handleNewStringChange}\r\n                                        required\r\n                                        type=\"number\"\r\n                                        value={newString.Thickness}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('StringColor.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"Color\"\r\n                                        onChange={handleNewStringChange}\r\n                                        required\r\n                                        value={newString.Color}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                    >\r\n                                    <TextValidator \r\n                                        fullWidth\r\n                                        label={t('StringHardness.label')}\r\n                                        margin=\"dense\"\r\n                                        name=\"Hardness\"\r\n                                        type=\"number\"\r\n                                        onChange={handleNewStringChange}\r\n                                        required\r\n                                        value={newString.Hardness}\r\n                                        variant=\"outlined\"\r\n                                        validators={['required']}\r\n                                        errorMessages={['Feld muss ausgefüllt werden']}\r\n                                    />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    </Paper>\r\n                    <Grid\r\n                        container\r\n                        spacing={3}\r\n                    >\r\n                        <Grid\r\n                        item\r\n                        md={4}\r\n                        xs={12}\r\n                        >\r\n                            <FormControl variant=\"outlined\" className={classes.formControl1} fullWidth>\r\n                                <InputLabel htmlFor=\"outlined-age-native-simple\">{t('status.label')}</InputLabel>\r\n                                <Select\r\n                                    label={t('status.label')}\r\n                                    value={curData.status}\r\n                                    onChange={handleDataChange}\r\n                                    margin=\"dense\"\r\n                                    name={\"status\"}\r\n                                >\r\n                                    <MenuItem value={0}>{t('statusVal0.label')}</MenuItem>\r\n                                    <MenuItem value={1}>{t('statusVal1.label')}</MenuItem>\r\n                                    <MenuItem value={2}>{t('statusVal2.label')}</MenuItem>\r\n                                    <MenuItem value={3}>{t('statusVal3.label')}</MenuItem>\r\n                                    <MenuItem value={4}>{t('statusVal4.label')}</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid\r\n                        item\r\n                        md={4}\r\n                        xs={12}>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <DateTimePicker\r\n                                    fullWidth\r\n                                    format=\"yyyy-MM-dd HH:mm\"\r\n                                    margin=\"dense\"\r\n                                    label={t('RequestedPickUpDateTime.label')}\r\n                                    inputVariant=\"outlined\"\r\n                                    value={curData.reqPickTime}\r\n                                    name=\"reqPickTime\"\r\n                                    onChange={handleReqDateChange}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </Grid>\r\n                        <Grid\r\n                        item\r\n                        md={4}\r\n                        xs={12}>\r\n                            <TextValidator \r\n                                fullWidth\r\n                                label={t('location.label')}\r\n                                margin=\"dense\"\r\n                                name=\"location\"\r\n                                onChange={handleDataChange}\r\n                                required\r\n                                value={curData.location}\r\n                                variant=\"outlined\"\r\n                                validators={['required']}\r\n                                errorMessages={['Feld muss ausgefüllt werden']}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Divider/>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                            {t('Add.label')}\r\n                        </Button>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            {t('Close.label')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </ValidatorForm>\r\n            </DialogContent>\r\n        </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Dialog, DialogContent, DialogTitle, Divider, Table,TableRow,TableBody,TableCell, DialogActions, Button} from '@material-ui/core';\r\n\r\n\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl1: {\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  px10: {\r\n      padding: 10,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n  },\r\n  dlgTitle: {\r\n    fontSize: '17px !important',\r\n    fontWeight: 'bold',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function ServiceRequest(props) {\r\n    const classes = useStyles();\r\n    const { opened, onSend, onClose, data, type} = props;\r\n    const { t } = useTranslation();\r\n    \r\n    const getDateFormat = (m_date) => {\r\n        var temp = new Date(m_date);\r\n        var res = \"\";\r\n        res += (temp.getDate() < 10 ? \"0\" + temp.getDate() : temp.getDate());\r\n        res += \"/\"\r\n        res += ((temp.getMonth() + 1) < 10 ? \"0\" + (temp.getMonth() + 1) : (temp.getMonth() + 1));\r\n        res += \"/\"\r\n        res += temp.getFullYear();\r\n        return res;\r\n    }\r\n\r\n    const getTimeFormat = (m_date) => {\r\n        var temp = new Date(m_date);\r\n        var res = \"\";\r\n        res += (temp.getHours() < 10 ? \"0\" + temp.getHours() : temp.getHours());\r\n        res += \":\"\r\n        res += (temp.getMinutes() < 10 ? \"0\" + temp.getMinutes() : temp.getMinutes());\r\n        return res;\r\n    }\r\n    \r\n    const userId = useSelector(state => state.user.userId);\r\n    \r\n    const toClient = data.Customer !== undefined ? (\"'\" + data.Customer.firstName + \" \" + data.Customer.lastName + \"'\") : \"\";\r\n    const toAgent = data.User !== undefined ? (\"'\" + data.User.firstName + \" \" + data.User.lastName + \"'\") : \"\";\r\n    const racketInfo = data.Racket !== undefined ? (data.Racket.Brand + \" \" + data.Racket.Name) : \"\";\r\n    const location = data.location !== undefined ? (data.location) : \"\";\r\n    const dateInfo = data.confPickTime !== undefined ? getDateFormat(data.confPickTime) : \"\";\r\n    const timeInfo = data.confPickTime !== undefined ? getTimeFormat(data.confPickTime) : \"\";\r\n\r\n    const MailInfo = type === 1 ? {\r\n        from: userId,\r\n        to: data.agentId,\r\n        subject : \"Der Schläger von \" + toClient.slice(1,-1) + \" ist fertig\",\r\n        text : \"Der \" + racketInfo + \" ist fertig und wird am \" + dateInfo + \" um \" +  timeInfo + \" Uhr an folgendem Ort bereitliegen: \" + location + \"\\n--\\nDonald Schulz Sport\\nWiesenstrasse 16\\n37073 Göttingen\\n0551-77344\\n\"\r\n    }: {\r\n        from: userId,\r\n        to: data.Customer !== undefined ? data.Customer.id : -1,\r\n        subject : \"Dein Schläger ist besaitet.\",\r\n        text: \"Hallo \" + toClient.slice(1,-1) + \",\\nDein \" + racketInfo + \" ist fertig besaitet und kann am \" + dateInfo + \" um \" + timeInfo + \" Uhr an folgendem Ort  abgeholt werden: \" + location + \"\\nMit Gruß DSS\\n--\\nDonald Schulz Sport\\nWiesenstrasse 16\\n37073 Göttingen\\n0551-77344\"\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        onSend(MailInfo);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <Dialog\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            open={opened}\r\n            onClose={onClose}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"max-width-dialog-title\">\r\n                <div className={classes.dlgTitle}>{t('mailconfirm.label') + (type ? toAgent : toClient)}</div>\r\n            </DialogTitle>\r\n            <Divider/>\r\n            <DialogContent>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                Subject\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {MailInfo.subject}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                Body\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {MailInfo.text.split(\"\\n\").map((val,index) => (\r\n                                    <div key={index}>{val}</div>\r\n                                ))}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onSubmit} type = \"submit\">Send</Button>\r\n                <Button onClick={onClose}>Cancel</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}","import React,{ useEffect, useCallback } from 'react';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport { default as pageStyle } from './style';\r\n\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport {\r\n   Card,\r\n   Toolbar, \r\n   IconButton,\r\n   Typography\r\n} from '@material-ui/core';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { default as ServiceRequestModal} from './Component/requestmodal';\r\nimport { default as AddServiceRequestModal} from './Component/addrequestmodal';\r\nimport { default as MailDlg} from './Component/maildialog';\r\n\r\nimport { serverUrl } from '../../api/serverUrl';\r\n\r\nconst axios = require('axios');\r\n\r\nexport default function MaterialTableDemo() {\r\n   const classes = pageStyle();\r\n   const { t } = useTranslation()\r\n\r\n   const [openDlg, setOpenDlg] = React.useState(false);\r\n   const [openMailDlg, setOpenMailDlg] = React.useState(false);\r\n   const [openAddDlg, setOpenAddDlg] = React.useState(false);\r\n   const [curData, setCurData] = React.useState({});\r\n   const [mailType, setMailType] = React.useState(0);\r\n\r\n   const userRole = useSelector(state => state.user.userRole);\r\n   const userId = useSelector(state => state.user.userId);\r\n\r\n   const compareFunction = (a,b,key) => {\r\n      key = key.split(\".\");\r\n      var abc = a[key[0]] === undefined ? \"\" : a[key[0]][key[1]];\r\n      var abcd = b[key[0]] === undefined ? \"\" : b[key[0]][key[1]];\r\n      console.log(a);\r\n      return abc.toLowerCase() >  abcd.toLowerCase() ? 1: -1;\r\n   }\r\n\r\n   const getDateFormat = (m_date) => {\r\n      var temp = new Date(m_date);\r\n      var res = \"\";\r\n      res += temp.getFullYear();\r\n      res += \"/\"\r\n      res += ((temp.getMonth() + 1) < 10 ? \"0\" + (temp.getMonth() + 1) : (temp.getMonth() + 1));\r\n      res += \"/\"\r\n      res += (temp.getDate() < 10 ? \"0\" + temp.getDate() : temp.getDate());\r\n      return res;\r\n  }\r\n\r\n  const getTimeFormat = (m_date) => {\r\n      var temp = new Date(m_date);\r\n      var res = \"\";\r\n      res += (temp.getHours() < 10 ? \"0\" + temp.getHours() : temp.getHours());\r\n      res += \":\"\r\n      res += (temp.getMinutes() < 10 ? \"0\" + temp.getMinutes() : temp.getMinutes());\r\n      return res;\r\n  }\r\n\r\n   const columns = [\r\n      { title: t('Date.label'), field: 'date'},\r\n      { title: t('CustomerName.label'), customSort: (a, b) => (a.Customer.firstName + a.Customer.lastName).toLowerCase() > (b.Customer.firstName + b.Customer.lastName).toLowerCase() ? 1 : -1, customFilterAndSearch: (term, rowData) => (rowData.Customer.firstName + \" \" + rowData.Customer.lastName).includes(term), render: rowData => rowData.Customer && (rowData.Customer.firstName + \" \" + rowData.Customer.lastName)},\r\n      { title: t('SportsClub.label'), field: 'Customer.sportsClub', customSort: (a, b) => compareFunction(a,b,'Customer.sportsClub')},\r\n      { title: t('SportType.label'), field: 'Racket.sportType', lookup: { 2: 'Squash', 1: 'Tennis', 0: 'Badminton' }},\r\n      { title: t('RacketBrand.label'), field: 'Racket.Brand', customSort: (a, b) => compareFunction(a,b,'Racket.Brand')},\r\n      { title: t('RacketName.label'), field: 'Racket.Name', customSort: (a, b) => compareFunction(a,b,'Racket.Name')},\r\n      { title: t('RacketGrip.label'), field: 'Racket.Grip', customSort: (a, b) => compareFunction(a,b,'Racket.Grip') },\r\n      { title: t('StringBrand.label'), field: 'String.Brand', customSort: (a, b) => compareFunction(a,b,'String.Brand')},\r\n      { title: t('StringName.label'), field: 'String.Name', customSort: (a, b) => compareFunction(a,b,'String.Name')},\r\n      { title: t('StringThickness.label'), field: 'String.Thickness', type: 'numeric'},\r\n      { title: t('StringColor.label'), field: 'String.Color', customSort: (a, b) => compareFunction(a,b,'String.Color')},\r\n      { title: t('StringHardness.label'), field: 'String.Hardness', type: 'numeric'},\r\n      { title: t('status.label'), field: 'status', lookup: { 4:'abgeholt', 3: 'im Club (b)', 2: 'im Laden (b)', 1: 'im Laden (u)', 0: 'im Club (u)' }},\r\n      { title: t('RequestedPickUpDateTime.label'), render: rowData => {let temp = new Date(rowData.reqPickTime); return rowData.reqPickTime !== null ? getDateFormat(rowData.reqPickTime)+ \" \" + getTimeFormat(rowData.reqPickTime): \"\"}, customSort:(a,b) => a.reqPickTime > b.reqPickTime ? 1: -1},\r\n      { title: t('location.label'), field: 'location', customSort: (a, b) => compareFunction(a,b,'location')},\r\n      { title: t('ConfirmedPickUpDateTime.label'), render: rowData => {let temp = new Date(rowData.confPickTime); return rowData.confPickTime !== null ? getDateFormat(rowData.confPickTime) + \" \" + getTimeFormat(rowData.confPickTime): \"\"}, customSort:(a,b) => a.confPickTime > b.confPickTime ? 1: -1},\r\n      { title: t('Payed.label'), field: 'payed'},\r\n      { title: t('Agent.label'), customFilterAndSearch: (term, rowData) => (rowData.User.firstName + \" \" + rowData.User.lastName).includes(term),render: rowData => rowData.User.firstName + \" \" + rowData.User.lastName, customSort: (a, b) => (a.User.firstName + a.User.lastName).toLowerCase() > (b.User.firstName + b.User.lastName).toLowerCase() ? 1 : -1},\r\n   ];\r\n\r\n   const [data, setData] = React.useState([]);\r\n\r\n   const initCustomer = {\r\n      id: 0,\r\n      lastName: \"\",\r\n      firstName: \"\",\r\n      street: \"\",\r\n      number: 0,\r\n      ZIPcode: 0,\r\n      city: \"\",\r\n      sportsClub: \"\",\r\n      eMail: \"\",\r\n      phone: \"\"\r\n   };\r\n\r\n   const initRacket = {\r\n      id: 0,\r\n      sportType: -1,\r\n      Brand: \"\",\r\n      Name: \"\",\r\n      Grip: \"\",\r\n   };\r\n\r\n   const initString = {\r\n      id: 0,\r\n      Brand: \"\",\r\n      Name: \"\",\r\n      ThickNess: 0,\r\n      Color: \"\",\r\n      Hardness: 0,\r\n   };\r\n\r\n   const getRequests = useCallback(() => {\r\n      axios.post(serverUrl + 'service/getRequests',{userId,userRole})\r\n      .then(function (response){\r\n         var tt = response.data;\r\n         for(var i = 0 ; i < tt.length; i++){\r\n            if(tt[i].String === null){\r\n               tt[i].String = initString;\r\n            }\r\n            if(tt[i].Racket === null){\r\n               tt[i].Racket = initRacket;\r\n               tt[i].String = initString;\r\n            }\r\n            if(tt[i].Customer === null) {\r\n               tt[i].Customer = initCustomer;\r\n               tt[i].Racket = initRacket;\r\n               tt[i].String = initString;\r\n            }\r\n         }         \r\n         setData(tt);\r\n      })\r\n      .catch(function (error){\r\n         console.log(error);\r\n      })\r\n   }, [userId,userRole])\r\n\r\n   useEffect(() => {\r\n      getRequests();\r\n   },[getRequests])\r\n\r\n   const onDlgClose = () => {\r\n      setOpenDlg(false);\r\n      setOpenAddDlg(false);\r\n      setOpenMailDlg(false);\r\n   }\r\n\r\n   const onServiceUpdate = (updateData) => {\r\n      axios.post(serverUrl + 'service/updateRequest',{data:JSON.stringify(updateData)})\r\n      .then(function (response){\r\n         getRequests();\r\n         setOpenDlg(false);\r\n      })\r\n      .catch(function (error){\r\n         console.log(error);\r\n         setOpenDlg(false);\r\n      })\r\n   }\r\n\r\n   const onAddService = (newData) => {\r\n      axios.post(serverUrl + 'service/addRequest',{data:JSON.stringify(newData)})\r\n      .then(function (response){\r\n         getRequests();\r\n         setOpenAddDlg(false);\r\n      })\r\n      .catch(function (error){\r\n         console.log(error);\r\n         setOpenAddDlg(false);\r\n      })\r\n   }\r\n\r\n   const onSendMail = (data) => {\r\n      data.type = mailType;\r\n      axios.post(serverUrl + 'service/sendMail',{data:JSON.stringify(data)})\r\n      .then(function (response){\r\n         alert(response.data);\r\n         setOpenMailDlg(false);\r\n      })\r\n      .catch(function (error){\r\n         console.log(error);\r\n         setOpenAddDlg(false);\r\n      })\r\n   }\r\n\r\n   return ( \r\n      <div className={classes.root}>\r\n         <Card className={classes.cardRoot}>\r\n            <MaterialTable\r\n               columns={columns}\r\n               data={data}\r\n               components={{\r\n                  Toolbar: props => (\r\n                     <>\r\n                        <Toolbar>\r\n                           <Typography>{t('ServiceRequest.label')}</Typography>\r\n                           <div style={{flexGrow: 1}} />\r\n                           <IconButton\r\n                              onClick={() => setOpenAddDlg(true)}\r\n                           >\r\n                              <AddBox/>\r\n                           </IconButton>\r\n                        </Toolbar>\r\n                     </>\r\n                  )\r\n               }}\r\n               options={{\r\n                  search: false,\r\n                  filtering: true,\r\n                  pageSize: 10,\r\n                  cellStyle: {\r\n                     border: '1px solid #eee',\r\n                  },\r\n                  headerStyle: {\r\n                     border: '2px solid #ddd',\r\n                  },\r\n                  filterCellStyle: {\r\n                     border: '1px solid #eee',\r\n                  }\r\n               }}\r\n               localization={{\r\n                  body: {\r\n                     emptyDataSourceMessage: t('body.emptyDataSourceMessage.label'),\r\n                     addTooltip: t('body.addTooltip.label'),\r\n                     deleteTooltip: t('body.deleteTooltip.label'),\r\n                     editTooltip: t('body.editTooltip.label'),\r\n                     filterRow: {\r\n                        filterTooltip: t('body.filterRow.filterTooltip.label'),\r\n                     },\r\n                     editRow: {\r\n                        deleteText: t('body.editRow.deleteText.label'),\r\n                        cancelTooltip: t('body.editRow.cancelTooltip.label'),\r\n                        saveTooltip: t('body.editRow.saveTooltip.label'),\r\n                     }\r\n                  },\r\n                  grouping: {\r\n                     placeholder: t('grouping.placeholder.label'),\r\n                  },\r\n                  header: {\r\n                     actions: t('header.actions.label'),\r\n                  },\r\n                  pagination: {\r\n                     labelDisplayedRows: t('pagination.labelDisplayedRows.label'),\r\n                     labelRowsSelect: t('pagination.labelRowsSelect.label'),\r\n                     labelRowsPerPage: t('pagination.labelRowsPerPage.label'),\r\n                     firstAriaLabel: t('pagination.firstAriaLabel.label'),\r\n                     firstTooltip: t('pagination.firstTooltip.label'),\r\n                     previousAriaLabel: t('pagination.previousAriaLabel.label'),\r\n                     previousTooltip: t('pagination.previousTooltip.label'),\r\n                     nextAriaLabel: t('pagination.nextAriaLabel.label'),\r\n                     nextTooltip: t('pagination.nextTooltip.label'),\r\n                     lastAriaLabel: t('pagination.lastAriaLabel.label'),\r\n                     lastTooltip: t('pagination.lastTooltip.label'),\r\n                  },\r\n                  toolbar: {\r\n                     addRemoveColumns: t('toolbar.addRemoveColumns.label'),\r\n                     nRowsSelected: t('toolbar.nRowsSelected.label'),\r\n                     showColumnsTitle: t('toolbar.showColumnsTitle.label'),\r\n                     showColumnsAriaLabel: t('toolbar.showColumnsAriaLabel.label'),\r\n                     exportTitle: t('toolbar.exportTitle.label'),\r\n                     exportAriaLabel: t('toolbar.exportAriaLabel.label'),\r\n                     exportName: t('toolbar.exportName.label'),\r\n                     searchTooltip: t('toolbar.searchTooltip.label'),\r\n                     searchPlaceholder: t('toolbar.searchPlaceholder.label'),\r\n                  }\r\n               }}\r\n               actions={userRole === 0 ? [\r\n                  {\r\n                     icon: 'edit',\r\n                     tooltip: t('EditServiceRequest.label'),\r\n                     onClick: (event, rowData) => {\r\n                        if(rowData.User.id === userId || userRole === 0){\r\n                           setCurData(rowData);\r\n                           setOpenDlg(true);\r\n                        }\r\n                     }\r\n                  },\r\n                  {\r\n                     icon: 'email',\r\n                     tooltip: t('SendToCustomer.label'),\r\n                     onClick: (event, rowData) => {\r\n                        if(rowData.User.id === userId || userRole === 0){\r\n                           setCurData(rowData);\r\n                           setMailType(0);\r\n                           setOpenMailDlg(true);\r\n                        }\r\n                     }\r\n                  },\r\n                  {\r\n                     icon: 'send',\r\n                     tooltip: t('SendToAgent.label'),\r\n                     onClick: (event, rowData) => {\r\n                        if(rowData.User.id === userId || userRole === 0){\r\n                           setCurData(rowData);\r\n                           setMailType(1);\r\n                           setOpenMailDlg(true);\r\n                        }\r\n                     }\r\n                  }\r\n               ]:[\r\n                  {\r\n                     icon: 'edit',\r\n                     tooltip: t('EditServiceRequest.label'),\r\n                     onClick: (event, rowData) => {\r\n                        setCurData(rowData);\r\n                        setOpenDlg(true);\r\n                     }\r\n                  },\r\n                  {\r\n                     icon: 'email',\r\n                     tooltip: t('SendToCustomer.label'),\r\n                     onClick: (event, rowData) => {\r\n                        setCurData(rowData);\r\n                        setMailType(0);\r\n                        setOpenMailDlg(true);\r\n                     }\r\n                  }\r\n               ]}\r\n            />\r\n         </Card>\r\n         <ServiceRequestModal opened={openDlg} onUpdate={onServiceUpdate} onClose={onDlgClose} data ={curData}/>\r\n         <AddServiceRequestModal opened={openAddDlg} onAdd={onAddService} onClose={onDlgClose} data ={data}/>\r\n         <MailDlg opened={openMailDlg} type={mailType} onSend={onSendMail} onClose={onDlgClose} data ={curData}/>\r\n      </div>\r\n   );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n        minHeight: 'calc(100% - 103px)'\r\n    },\r\n    cardRoot: {\r\n        padding: 16,\r\n        background: 'none',\r\n        boxShadow: 'none !important',\r\n    },\r\n    grid: {\r\n        height: '100%'\r\n    },\r\n    quoteContainer: {\r\n        [theme.breakpoints.down('md')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    quote: {\r\n        backgroundColor: theme.palette.neutral,\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundImage: 'url(' + require(\"../../assets/images/auth.jpg\") + ')',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center'\r\n    },\r\n    quoteInner: {\r\n        textAlign: 'center',\r\n        flexBasis: '600px'\r\n    },\r\n    quoteText: {\r\n        color: theme.palette.white,\r\n        fontWeight: 300\r\n    },\r\n    name: {\r\n        marginTop: theme.spacing(3),\r\n        color: theme.palette.white\r\n    },\r\n    bio: {\r\n        color: theme.palette.white\r\n    },\r\n    contentContainer: {\r\n    },\r\n    content: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    contentHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingTop: theme.spacing(5),\r\n        paddingBototm: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    logoImage: {\r\n        marginLeft: theme.spacing(4)\r\n    },\r\n    contentBody: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            justifyContent: 'center'\r\n        }\r\n    },\r\n    form: {\r\n        paddingLeft: 100,\r\n        paddingRight: 100,\r\n        paddingBottom: 125,\r\n        flexBasis: 700,\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(2)\r\n        }\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialButtons: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    sugestion: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    textField: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    signInButton: {\r\n        margin: theme.spacing(2, 0)\r\n    }\r\n }));\r\n\r\n export default useStyles;","import React,{ useEffect, useCallback } from 'react';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport { default as pageStyle } from './style';\r\n\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport {\r\n   Card\r\n} from '@material-ui/core';\r\n\r\nimport { serverUrl } from '../../api/serverUrl';\r\nconst axios = require('axios');\r\n\r\nexport default function MaterialTableDemo() {\r\n   const classes = pageStyle();\r\n   const { t } = useTranslation()\r\n\r\n   const columns = [\r\n      { title: t('UserName.label'), field: 'userName' },\r\n      { title: t('FirstName.label'), field: 'firstName' },\r\n      { title: t('LastName.label'), field: 'lastName' },\r\n      { title: t('Street.label'), field: 'street' },\r\n      { title: t('Number.label'), field: 'number', type: 'numeric' },\r\n      { title: t('ZIPcode.label'), field: 'ZIPcode', type: 'numeric' },\r\n      { title: t('City.label'), field: 'city'},\r\n      { title: t('SportsClub.label'), field: 'sportsClub'},\r\n      { title: t('Email.label'), field: 'eMail'},\r\n      { title: t('Phone.label'), field: 'phone'},\r\n      { title: t('Role.label'), field: 'role', lookup: { 0: 'Admin', 1: 'Agent' } },\r\n   ];\r\n\r\n   const [data, setData] = React.useState([]);\r\n\r\n   const getUsers = useCallback(() => {\r\n      axios.post(serverUrl + 'user/getUsers')\r\n      .then(function (response){\r\n         setData(response.data);\r\n      })\r\n      .catch(function (error){\r\n         console.log(error);\r\n      })\r\n   },[]);\r\n\r\n   useEffect(() => {\r\n      getUsers();\r\n   },[getUsers])\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <Card className={classes.cardRoot}>\r\n            <MaterialTable\r\n               title={t('UserTable.label')}\r\n               columns={columns}\r\n               data={data}\r\n               options={{\r\n                  search: false,\r\n                  pageSize: 10,\r\n               }}\r\n               localization={{\r\n                  body: {\r\n                     emptyDataSourceMessage: t('body.emptyDataSourceMessage.label'),\r\n                     addTooltip: t('body.addTooltip.label'),\r\n                     deleteTooltip: t('body.deleteTooltip.label'),\r\n                     editTooltip: t('body.editTooltip.label'),\r\n                     filterRow: {\r\n                        filterTooltip: t('body.filterRow.filterTooltip.label'),\r\n                     },\r\n                     editRow: {\r\n                        deleteText: t('body.editRow.deleteText.label'),\r\n                        cancelTooltip: t('body.editRow.cancelTooltip.label'),\r\n                        saveTooltip: t('body.editRow.saveTooltip.label'),\r\n                     }\r\n                  },\r\n                  grouping: {\r\n                     placeholder: t('grouping.placeholder.label'),\r\n                  },\r\n                  header: {\r\n                     actions: t('header.actions.label'),\r\n                  },\r\n                  pagination: {\r\n                     labelDisplayedRows: t('pagination.labelDisplayedRows.label'),\r\n                     labelRowsSelect: t('pagination.labelRowsSelect.label'),\r\n                     labelRowsPerPage: t('pagination.labelRowsPerPage.label'),\r\n                     firstAriaLabel: t('pagination.firstAriaLabel.label'),\r\n                     firstTooltip: t('pagination.firstTooltip.label'),\r\n                     previousAriaLabel: t('pagination.previousAriaLabel.label'),\r\n                     previousTooltip: t('pagination.previousTooltip.label'),\r\n                     nextAriaLabel: t('pagination.nextAriaLabel.label'),\r\n                     nextTooltip: t('pagination.nextTooltip.label'),\r\n                     lastAriaLabel: t('pagination.lastAriaLabel.label'),\r\n                     lastTooltip: t('pagination.lastTooltip.label'),\r\n                  },\r\n                  toolbar: {\r\n                     addRemoveColumns: t('toolbar.addRemoveColumns.label'),\r\n                     nRowsSelected: t('toolbar.nRowsSelected.label'),\r\n                     showColumnsTitle: t('toolbar.showColumnsTitle.label'),\r\n                     showColumnsAriaLabel: t('toolbar.showColumnsAriaLabel.label'),\r\n                     exportTitle: t('toolbar.exportTitle.label'),\r\n                     exportAriaLabel: t('toolbar.exportAriaLabel.label'),\r\n                     exportName: t('toolbar.exportName.label'),\r\n                     searchTooltip: t('toolbar.searchTooltip.label'),\r\n                     searchPlaceholder: t('toolbar.searchPlaceholder.label'),\r\n                  }\r\n               }}\r\n               editable={{\r\n               onRowAdd: (newData) =>\r\n                  new Promise((resolve) => {\r\n                     setTimeout(() => {\r\n                     resolve();\r\n                     axios.post(serverUrl + 'user/addUser',{\r\n                        userInfo: newData\r\n                     })\r\n                     .then(function (response){\r\n                        getUsers();\r\n                     })\r\n                     }, 600);\r\n                  }),\r\n               onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                     setTimeout(() => {\r\n                     resolve();\r\n                     if (oldData) {\r\n                        const newUserData = {...newData};\r\n                        newUserData.id = data[data.indexOf(oldData)].id;\r\n                        axios.post(serverUrl + 'user/updateUser',{\r\n                           userInfo: newUserData\r\n                        })\r\n                        .then(function (response){\r\n                           getUsers();\r\n                        })\r\n                     }\r\n                     }, 600);\r\n                  }),\r\n               onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                     setTimeout(() => {\r\n                     resolve();\r\n                     axios.post(serverUrl + 'user/deleteUser',{\r\n                        userId: data[data.indexOf(oldData)].id\r\n                     })\r\n                     .then(function (response){\r\n                        getUsers();\r\n                     })\r\n                     }, 600);\r\n                  }),\r\n               }}\r\n            />\r\n         </Card>\r\n      </div>\r\n   );\r\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n} from '@material-ui/core';\n\nimport { useTranslation } from 'react-i18next'\n\nimport { useSelector, useDispatch  } from 'react-redux'\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\nimport { serverUrl } from '../../../../api/serverUrl';\nconst axios = require('axios');\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst AccountDetails = props => {\n  const { className, ...rest } = props;\n\n  const { t } = useTranslation();\n\n  const classes = useStyles();\n  const userId = useSelector(state => state.user.userId);\n  const role = useSelector(state => state.user.userRole);\n  const dispatch = useDispatch();\n\n  const [userInfo, setUserInfo] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    street: \"\",\n    number: 0,\n    ZIPcode: 11111,\n    city: \"\",\n    sportsClub:\"\",\n    eMail: \"\",\n    phone: \"\"\n  });\n\n  const handleChange = event => {\n    setUserInfo({\n      ...userInfo,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const getUser = useCallback(() => {\n    axios.post(serverUrl + 'user/getUser',{userId})\n    .then(function (response){\n      setUserInfo(response.data);\n      let res = {\n        name: response.data.firstName + \" \" + response.data.lastName,\n        firstName: response.data.firstName,\n        lastName: response.data.lastName,\n        id: response.data.id,\n        role: role,\n      }\n      dispatch({ type: \"Set_UserData\", data: res}); \n    })\n    .catch(function (error){\n        console.log(error);\n    });\n  }, [userId, role,dispatch]);\n\n  useEffect(() => {\n    getUser();\n  },[getUser])\n\n  const handleChangeUserData = () => {\n    axios.post(serverUrl + 'user/updateUser',{ userInfo })\n   .then(function (response){\n      getUser();\n   })\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <ValidatorForm\n        className={classes.form}\n        onSubmit={handleChangeUserData}\n      >\n        <CardHeader\n          subheader={t('ProfileDescription.label')}\n          title={t('Profile.label')}\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextValidator \n                fullWidth\n                label={t('FirstName.label')}\n                margin=\"dense\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={userInfo.firstName}\n                variant=\"outlined\"\n                validators={['required']}\n                errorMessages={['Feld muss ausgefüllt werden']}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextValidator \n                fullWidth\n                label={t('LastName.label')}\n                margin=\"dense\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={userInfo.lastName}\n                variant=\"outlined\"\n                validators={['required']}\n                errorMessages={['Feld muss ausgefüllt werden']}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextValidator \n                fullWidth\n                label={t('Street.label')}\n                margin=\"dense\"\n                name=\"street\"\n                onChange={handleChange}\n                required\n                value={userInfo.street}\n                variant=\"outlined\"\n                validators={['required']}\n                errorMessages={['Feld muss ausgefüllt werden']}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextValidator \n                fullWidth\n                label={t('Number.label')}\n                margin=\"dense\"\n                name=\"number\"\n                type=\"number\"\n                onChange={handleChange}\n                required\n                value={userInfo.number}\n                variant=\"outlined\"\n                validators={['required']}\n                errorMessages={['Feld muss ausgefüllt werden']}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextValidator \n                fullWidth\n                label={t('ZIPcode.label')}\n                margin=\"dense\"\n                name=\"ZIPcode\"\n                type=\"number\"\n                onChange={handleChange}\n                required\n                value={userInfo.ZIPcode}\n                variant=\"outlined\"\n                validators={['required']}\n                errorMessages={['Feld muss ausgefüllt werden']}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextValidator \n                fullWidth\n                label={t('City.label')}\n                margin=\"dense\"\n                name=\"city\"\n                onChange={handleChange}\n                required\n                value={userInfo.city}\n                variant=\"outlined\"\n                validators={['required']}\n                errorMessages={['Feld muss ausgefüllt werden']}\n              />\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextValidator \n                fullWidth\n                label={t('SportsClub.label')}\n                margin=\"dense\"\n                name=\"sportsClub\"\n                onChange={handleChange}\n                required\n                value={userInfo.sportsClub}\n                variant=\"outlined\"\n                validators={['required']}\n                errorMessages={['Feld muss ausgefüllt werden']}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextValidator \n                fullWidth\n                label={t('EmailAddress.label')}\n                margin=\"dense\"\n                name=\"eMail\"\n                onChange={handleChange}\n                required\n                value={userInfo.eMail}\n                variant=\"outlined\"\n                validators={['required']}\n                errorMessages={['Feld muss ausgefüllt werden']}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextValidator \n                fullWidth\n                label={t('PhoneNumber.label')}\n                margin=\"dense\"\n                name=\"phone\"\n                onChange={handleChange}\n                value={userInfo.phone}\n                variant=\"outlined\"\n                validators={['required']}\n                errorMessages={['Feld muss ausgefüllt werden']}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            {t('SaveDetails.label')}\n          </Button>\n        </CardActions>\n      </ValidatorForm>\n    </Card>\n  );\n};\n\nAccountDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AccountDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Avatar,\n  Typography,\n  Divider,\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\nimport { useTranslation } from 'react-i18next'\n\nimport { useSelector } from 'react-redux'\n\nimport { serverUrl } from '../../../../api/serverUrl';\nconst axios = require('axios');\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  details: {\n    display: 'flex'\n  },\n  avatar: {\n    marginLeft: 'auto',\n    height: 100,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst AccountProfile = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const { t } = useTranslation()\n  \n  const name = useSelector(state => state.user.fullName);\n  const userId = useSelector(state => state.user.userId);\n  const [alertId, setAlertId] = React.useState(0);\n  const [opass, setOpass] = React.useState(\"\");\n  const [pass, setPass] = React.useState(\"\");\n  const [confirm, setConfirm] = React.useState(\"\");\n\n  const handleUpdatePassword = () => {\n    axios.post(serverUrl + 'user/updatePass',{ userId, opass, pass, confirm })\n    .then(function (response){\n      console.log(response.data);\n        setAlertId(parseInt(response.data));\n        setTimeout(() => {setAlertId(0)},3000);\n    })\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <div className={classes.details}>\n          <div>\n            <Typography\n              gutterBottom\n              variant=\"h2\"\n            >\n              {name}\n            </Typography>\n          </div>\n          <Avatar\n            className={classes.avatar}\n            src={\"avatar\"}\n          />\n        </div>\n      </CardContent>\n      <Divider />\n      <ValidatorForm\n          className={classes.form}\n          onSubmit={handleUpdatePassword}\n      >\n        <CardContent>\n          <TextValidator \n            fullWidth\n            label={t('OldPassword.label')}\n            name=\"oldpassword\"\n            value={opass}\n            onChange={(event)=>{setOpass(event.target.value)}}\n            type=\"password\"\n            variant=\"outlined\"\n            validators={['required']}\n            errorMessages={['Feld muss ausgefüllt werden']}\n          />\n          <TextValidator \n            fullWidth\n            label={t('NewPassword.label')}\n            name=\"password\"\n            type=\"password\"\n            value={pass}\n            onChange={(event)=>{setPass(event.target.value)}}\n            style={{ marginTop: '1rem' }}\n            variant=\"outlined\"\n            validators={['required']}\n            errorMessages={['Feld muss ausgefüllt werden']}\n          />\n          <TextValidator \n            fullWidth\n            label={t('ConfirmPassword.label')}\n            name=\"confirm\"\n            value={confirm}\n            onChange={(event)=>{setConfirm(event.target.value)}}\n            style={{ marginTop: '1rem' }}\n            type=\"password\"\n            variant=\"outlined\"\n            validators={['required']}\n            errorMessages={['Feld muss ausgefüllt werden']}\n          />\n          {\n            alertId === 3 ? (<Alert style={{ marginTop: '1rem' }} severity=\"success\">{t('PswdChgSuc.label')}</Alert>):\n            alertId === 2 ? (<Alert style={{ marginTop: '1rem' }} severity=\"warning\">{t('OPswdInc.label')}</Alert>):\n            alertId === 1? (<Alert style={{ marginTop: '1rem' }} severity=\"warning\">{t('NPswdMisMtc.label')}</Alert>) : (<></>)\n          }\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            type=\"submit\"\n          >\n            {t('Update.label')}\n          </Button>\n        </CardActions>\n      </ValidatorForm>\n    </Card>\n  );\n};\n\nAccountProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AccountProfile;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport { AccountProfile, AccountDetails } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4),\n    minHeight: 'calc(100% - 103px)'\n  }\n}));\n\nconst Account = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={4}\n      >\n        <Grid\n          item\n          lg={4}\n          md={6}\n          xl={4}\n          xs={12}\n        >\n          <AccountProfile />\n        </Grid>\n        <Grid\n          item\n          lg={8}\n          md={6}\n          xl={8}\n          xs={12}\n        >\n          <AccountDetails />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Account;\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n        minHeight: 'calc(100% - 103px)'\r\n    },\r\n    cardRoot: {\r\n        padding: 16,\r\n        background: 'none',\r\n        boxShadow: 'none !important',\r\n    },\r\n    grid: {\r\n        height: '100%'\r\n    },\r\n    quoteContainer: {\r\n        [theme.breakpoints.down('md')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    quote: {\r\n        backgroundColor: theme.palette.neutral,\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundImage: 'url(' + require(\"../../assets/images/auth.jpg\") + ')',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center'\r\n    },\r\n    quoteInner: {\r\n        textAlign: 'center',\r\n        flexBasis: '600px'\r\n    },\r\n    quoteText: {\r\n        color: theme.palette.white,\r\n        fontWeight: 300\r\n    },\r\n    name: {\r\n        marginTop: theme.spacing(3),\r\n        color: theme.palette.white\r\n    },\r\n    bio: {\r\n        color: theme.palette.white\r\n    },\r\n    contentContainer: {\r\n    },\r\n    content: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    contentHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingTop: theme.spacing(5),\r\n        paddingBototm: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    logoImage: {\r\n        marginLeft: theme.spacing(4)\r\n    },\r\n    contentBody: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            justifyContent: 'center'\r\n        }\r\n    },\r\n    form: {\r\n        paddingLeft: 100,\r\n        paddingRight: 100,\r\n        paddingBottom: 125,\r\n        flexBasis: 700,\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(2)\r\n        }\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialButtons: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    sugestion: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    textField: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    signInButton: {\r\n        margin: theme.spacing(2, 0)\r\n    }\r\n }));\r\n\r\n export default useStyles;","import React,{ useEffect, useCallback } from 'react';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport { default as pageStyle } from './style';\r\n\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport {\r\n   Card\r\n} from '@material-ui/core';\r\n\r\nimport { serverUrl } from '../../api/serverUrl';\r\nimport { useSelector } from 'react-redux'\r\nconst axios = require('axios');\r\n\r\nexport default function MaterialTableDemo() {\r\n   const classes = pageStyle();\r\n   const { t } = useTranslation()\r\n\r\n   const columns = [\r\n      { title: t('FirstName.label'), field: 'firstName' },\r\n      { title: t('LastName.label'), field: 'lastName' },\r\n      { title: t('Street.label'), field: 'street' },\r\n      { title: t('Number.label'), field: 'number', type: 'numeric' },\r\n      { title: t('ZIPcode.label'), field: 'ZIPcode', type: 'numeric' },\r\n      { title: t('City.label'), field: 'city'},\r\n      { title: t('SportsClub.label'), field: 'sportsClub'},\r\n      { title: t('Email.label'), field: 'eMail'},\r\n      { title: t('Phone.label'), field: 'phone'}\r\n   ];\r\n\r\n   const [data, setData] = React.useState([]);\r\n\r\n   const userRole = useSelector(state => state.user.userRole);\r\n   const userId = useSelector(state => state.user.userId);\r\n\r\n   const getCustomers = useCallback(() => {\r\n      axios.post(serverUrl + 'service/getCustomers',{userRole, userId})\r\n      .then(function (response){\r\n         setData(response.data);\r\n      })\r\n      .catch(function (error){\r\n         console.log(error);\r\n      })\r\n   },[userRole, userId]);\r\n\r\n   useEffect(() => {\r\n      getCustomers();\r\n   },[getCustomers])\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <Card className={classes.cardRoot}>\r\n            <MaterialTable\r\n               title={t('Customer.label')}\r\n               columns={columns}\r\n               data={data}\r\n               options={{\r\n                  search: false,\r\n                  filtering: true,\r\n                  sorting: true,\r\n                  pageSize: 10,\r\n               }}\r\n               localization={{\r\n                  body: {\r\n                     emptyDataSourceMessage: t('body.emptyDataSourceMessage.label'),\r\n                     addTooltip: t('body.addTooltip.label'),\r\n                     deleteTooltip: t('body.deleteTooltip.label'),\r\n                     editTooltip: t('body.editTooltip.label'),\r\n                     filterRow: {\r\n                        filterTooltip: t('body.filterRow.filterTooltip.label'),\r\n                     },\r\n                     editRow: {\r\n                        deleteText: t('body.editRow.deleteText.label'),\r\n                        cancelTooltip: t('body.editRow.cancelTooltip.label'),\r\n                        saveTooltip: t('body.editRow.saveTooltip.label'),\r\n                     }\r\n                  },\r\n                  grouping: {\r\n                     placeholder: t('grouping.placeholder.label'),\r\n                  },\r\n                  header: {\r\n                     actions: t('header.actions.label'),\r\n                  },\r\n                  pagination: {\r\n                     labelDisplayedRows: t('pagination.labelDisplayedRows.label'),\r\n                     labelRowsSelect: t('pagination.labelRowsSelect.label'),\r\n                     labelRowsPerPage: t('pagination.labelRowsPerPage.label'),\r\n                     firstAriaLabel: t('pagination.firstAriaLabel.label'),\r\n                     firstTooltip: t('pagination.firstTooltip.label'),\r\n                     previousAriaLabel: t('pagination.previousAriaLabel.label'),\r\n                     previousTooltip: t('pagination.previousTooltip.label'),\r\n                     nextAriaLabel: t('pagination.nextAriaLabel.label'),\r\n                     nextTooltip: t('pagination.nextTooltip.label'),\r\n                     lastAriaLabel: t('pagination.lastAriaLabel.label'),\r\n                     lastTooltip: t('pagination.lastTooltip.label'),\r\n                  },\r\n                  toolbar: {\r\n                     addRemoveColumns: t('toolbar.addRemoveColumns.label'),\r\n                     nRowsSelected: t('toolbar.nRowsSelected.label'),\r\n                     showColumnsTitle: t('toolbar.showColumnsTitle.label'),\r\n                     showColumnsAriaLabel: t('toolbar.showColumnsAriaLabel.label'),\r\n                     exportTitle: t('toolbar.exportTitle.label'),\r\n                     exportAriaLabel: t('toolbar.exportAriaLabel.label'),\r\n                     exportName: t('toolbar.exportName.label'),\r\n                     searchTooltip: t('toolbar.searchTooltip.label'),\r\n                     searchPlaceholder: t('toolbar.searchPlaceholder.label'),\r\n                  }\r\n               }}\r\n               editable={{\r\n               onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                     setTimeout(() => {\r\n                     resolve();\r\n                     if (oldData) {\r\n                        const newUserData = {...newData};\r\n                        newUserData.id = data[data.indexOf(oldData)].id;\r\n                        axios.post(serverUrl + 'service/updateCustomer',{\r\n                           customerInfo: newUserData\r\n                        })\r\n                        .then(function (response){\r\n                           getCustomers();\r\n                        })\r\n                     }\r\n                     }, 600);\r\n                  }),\r\n               onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                     setTimeout(() => {\r\n                     resolve();\r\n                     axios.post(serverUrl + 'service/deleteCustomer',{\r\n                        customerId: data[data.indexOf(oldData)].id\r\n                     })\r\n                     .then(function (response){\r\n                        getCustomers();\r\n                     })\r\n                     }, 600);\r\n                  }),\r\n               }}\r\n            />\r\n         </Card>\r\n      </div>\r\n   );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n        minHeight: 'calc(100% - 103px)'\r\n    },\r\n    cardRoot: {\r\n        padding: 16,\r\n        background: 'none',\r\n        boxShadow: 'none !important',\r\n    },\r\n    grid: {\r\n        height: '100%'\r\n    },\r\n    quoteContainer: {\r\n        [theme.breakpoints.down('md')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    quote: {\r\n        backgroundColor: theme.palette.neutral,\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundImage: 'url(' + require(\"../../assets/images/auth.jpg\") + ')',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center'\r\n    },\r\n    quoteInner: {\r\n        textAlign: 'center',\r\n        flexBasis: '600px'\r\n    },\r\n    quoteText: {\r\n        color: theme.palette.white,\r\n        fontWeight: 300\r\n    },\r\n    name: {\r\n        marginTop: theme.spacing(3),\r\n        color: theme.palette.white\r\n    },\r\n    bio: {\r\n        color: theme.palette.white\r\n    },\r\n    contentContainer: {\r\n    },\r\n    content: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    contentHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingTop: theme.spacing(5),\r\n        paddingBototm: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    logoImage: {\r\n        marginLeft: theme.spacing(4)\r\n    },\r\n    contentBody: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            justifyContent: 'center'\r\n        }\r\n    },\r\n    form: {\r\n        paddingLeft: 100,\r\n        paddingRight: 100,\r\n        paddingBottom: 125,\r\n        flexBasis: 700,\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(2)\r\n        }\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialButtons: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    sugestion: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    textField: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    signInButton: {\r\n        margin: theme.spacing(2, 0)\r\n    }\r\n }));\r\n\r\n export default useStyles;","import React,{ useEffect, useCallback } from 'react';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport { default as pageStyle } from './style';\r\n\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport {\r\n   Card\r\n} from '@material-ui/core';\r\n\r\nimport { serverUrl } from '../../api/serverUrl';\r\nimport { useSelector } from 'react-redux'\r\nconst axios = require('axios');\r\n\r\nexport default function MaterialTableDemo() {\r\n   const classes = pageStyle();\r\n   const { t } = useTranslation()\r\n\r\n   const columns = [\r\n      { title: t('CustomerName.label'), editable: 'never', filtering: false, customSort: (a, b) => (a.Customer.firstName + a.Customer.lastName).toLowerCase() > (b.Customer.firstName + b.Customer.lastName).toLowerCase() ? 1 : -1, customFilterAndSearch: (term, rowData) => (rowData.Customer.firstName + \" \" + rowData.Customer.lastName).includes(term), render: rowData => rowData.Customer && (rowData.Customer.firstName + \" \" + rowData.Customer.lastName + \"/\" + rowData.Customer.sportsClub)},\r\n      { title: t('SportType.label'), field: 'Racket.sportType', lookup: { 2: 'Squash', 1: 'Tennis', 0: 'Badminton' }},\r\n      { title: t('RacketBrand.label'), field: 'Racket.Brand', customSort: (a, b) => compareFunction(a,b,'Racket.Brand')},\r\n      { title: t('RacketName.label'), field: 'Racket.Name', customSort: (a, b) => compareFunction(a,b,'Racket.Name')},\r\n      { title: t('RacketGrip.label'), field: 'Racket.Grip', customSort: (a, b) => compareFunction(a,b,'Racket.Grip') },\r\n   ];\r\n\r\n   const [data, setData] = React.useState([]);\r\n\r\n   const userRole = useSelector(state => state.user.userRole);\r\n   const userId = useSelector(state => state.user.userId);\r\n\r\n   const compareFunction = (a,b,key) => {\r\n      key = key.split(\".\");\r\n      return a[key[0]][key[1]].toLowerCase() > b[key[0]][key[1]].toLowerCase() ? 1: -1;\r\n   }\r\n\r\n   const getRackets = useCallback(() => {\r\n      axios.post(serverUrl + 'service/getRackets',{userRole, userId})\r\n      .then(function (response){\r\n         var td = response.data;\r\n         var tempD = [];\r\n         for(var i = 0 ; i < td.length; i++){\r\n            if(td[i].Racket !== null){\r\n               tempD.push(td[i]);\r\n            }\r\n         }\r\n         setData(tempD);\r\n      })\r\n      .catch(function (error){\r\n         console.log(error);\r\n      })\r\n   },[userRole, userId]);\r\n\r\n   useEffect(() => {\r\n      getRackets();\r\n   },[getRackets])\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <Card className={classes.cardRoot}>\r\n            <MaterialTable\r\n               title={t('Racket.label')}\r\n               columns={columns}\r\n               data={data}\r\n               options={{\r\n                  search: false,\r\n                  filtering: true,\r\n                  sorting: true,\r\n                  pageSize: 10,\r\n               }}\r\n               localization={{\r\n                  body: {\r\n                     emptyDataSourceMessage: t('body.emptyDataSourceMessage.label'),\r\n                     addTooltip: t('body.addTooltip.label'),\r\n                     deleteTooltip: t('body.deleteTooltip.label'),\r\n                     editTooltip: t('body.editTooltip.label'),\r\n                     filterRow: {\r\n                        filterTooltip: t('body.filterRow.filterTooltip.label'),\r\n                     },\r\n                     editRow: {\r\n                        deleteText: t('body.editRow.deleteText.label'),\r\n                        cancelTooltip: t('body.editRow.cancelTooltip.label'),\r\n                        saveTooltip: t('body.editRow.saveTooltip.label'),\r\n                     }\r\n                  },\r\n                  grouping: {\r\n                     placeholder: t('grouping.placeholder.label'),\r\n                  },\r\n                  header: {\r\n                     actions: t('header.actions.label'),\r\n                  },\r\n                  pagination: {\r\n                     labelDisplayedRows: t('pagination.labelDisplayedRows.label'),\r\n                     labelRowsSelect: t('pagination.labelRowsSelect.label'),\r\n                     labelRowsPerPage: t('pagination.labelRowsPerPage.label'),\r\n                     firstAriaLabel: t('pagination.firstAriaLabel.label'),\r\n                     firstTooltip: t('pagination.firstTooltip.label'),\r\n                     previousAriaLabel: t('pagination.previousAriaLabel.label'),\r\n                     previousTooltip: t('pagination.previousTooltip.label'),\r\n                     nextAriaLabel: t('pagination.nextAriaLabel.label'),\r\n                     nextTooltip: t('pagination.nextTooltip.label'),\r\n                     lastAriaLabel: t('pagination.lastAriaLabel.label'),\r\n                     lastTooltip: t('pagination.lastTooltip.label'),\r\n                  },\r\n                  toolbar: {\r\n                     addRemoveColumns: t('toolbar.addRemoveColumns.label'),\r\n                     nRowsSelected: t('toolbar.nRowsSelected.label'),\r\n                     showColumnsTitle: t('toolbar.showColumnsTitle.label'),\r\n                     showColumnsAriaLabel: t('toolbar.showColumnsAriaLabel.label'),\r\n                     exportTitle: t('toolbar.exportTitle.label'),\r\n                     exportAriaLabel: t('toolbar.exportAriaLabel.label'),\r\n                     exportName: t('toolbar.exportName.label'),\r\n                     searchTooltip: t('toolbar.searchTooltip.label'),\r\n                     searchPlaceholder: t('toolbar.searchPlaceholder.label'),\r\n                  }\r\n               }}\r\n               editable={{\r\n               onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                     setTimeout(() => {\r\n                     resolve();\r\n                     if (oldData) {\r\n                        const newRacketData = {...newData};\r\n                        axios.post(serverUrl + 'service/updateRacket',{\r\n                           racketInfo: newRacketData.Racket\r\n                        })\r\n                        .then(function (response){\r\n                           getRackets();\r\n                        })\r\n                     }\r\n                     }, 600);\r\n                  }),\r\n               onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                     setTimeout(() => {\r\n                     resolve();\r\n                     axios.post(serverUrl + 'service/deleteRacket',{\r\n                        racketId: oldData.Racket.id\r\n                     })\r\n                     .then(function (response){\r\n                        getRackets();\r\n                     });\r\n                     }, 600);\r\n                     \r\n                  }),\r\n               }}\r\n            />\r\n         </Card>\r\n      </div>\r\n   );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n        minHeight: 'calc(100% - 103px)'\r\n    },\r\n    cardRoot: {\r\n        padding: 16,\r\n        background: 'none',\r\n        boxShadow: 'none !important',\r\n    },\r\n    grid: {\r\n        height: '100%'\r\n    },\r\n    quoteContainer: {\r\n        [theme.breakpoints.down('md')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    quote: {\r\n        backgroundColor: theme.palette.neutral,\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundImage: 'url(' + require(\"../../assets/images/auth.jpg\") + ')',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center'\r\n    },\r\n    quoteInner: {\r\n        textAlign: 'center',\r\n        flexBasis: '600px'\r\n    },\r\n    quoteText: {\r\n        color: theme.palette.white,\r\n        fontWeight: 300\r\n    },\r\n    name: {\r\n        marginTop: theme.spacing(3),\r\n        color: theme.palette.white\r\n    },\r\n    bio: {\r\n        color: theme.palette.white\r\n    },\r\n    contentContainer: {\r\n    },\r\n    content: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    contentHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingTop: theme.spacing(5),\r\n        paddingBototm: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    logoImage: {\r\n        marginLeft: theme.spacing(4)\r\n    },\r\n    contentBody: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            justifyContent: 'center'\r\n        }\r\n    },\r\n    form: {\r\n        paddingLeft: 100,\r\n        paddingRight: 100,\r\n        paddingBottom: 125,\r\n        flexBasis: 700,\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(2)\r\n        }\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialButtons: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    socialIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    sugestion: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    textField: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    signInButton: {\r\n        margin: theme.spacing(2, 0)\r\n    }\r\n }));\r\n\r\n export default useStyles;","import React,{ useEffect, useCallback } from 'react';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport { default as pageStyle } from './style';\r\n\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport {\r\n   Card\r\n} from '@material-ui/core';\r\n\r\nimport { serverUrl } from '../../api/serverUrl';\r\nimport { useSelector } from 'react-redux'\r\nconst axios = require('axios');\r\n\r\nexport default function MaterialTableDemo() {\r\n   const classes = pageStyle();\r\n   const { t } = useTranslation()\r\n\r\n   const compareFunction = (a,b,key) => {\r\n      key = key.split(\".\");\r\n      return a[key[0]][key[1]].toLowerCase() > b[key[0]][key[1]].toLowerCase() ? 1: -1;\r\n   }\r\n\r\n   const sportTypes = [\"Badminton\",\"Tennis\",\"Squash\"];\r\n\r\n   const columns = [\r\n      { title: t('CustomerName.label'), editable: 'never', filtering: false, customSort: (a, b) => (a.Customer.firstName + a.Customer.lastName).toLowerCase() > (b.Customer.firstName + b.Customer.lastName).toLowerCase() ? 1 : -1, render: rowData => rowData.Customer && (rowData.Customer.firstName + \" \" + rowData.Customer.lastName + \"/\" + rowData.Customer.sportsClub)},\r\n      { title: t('Racket.label'), editable: 'never', filtering: false, customSort: (a, b) => (a.Racket.sportType + a.Racket.Brand + a.Racket.Name + a.Racket.Grip).toLowerCase() > (b.Racket.sportType + b.Racket.Brand + b.Racket.Name + b.Racket.Grip).toLowerCase() ? 1 : -1, render: rowData => rowData.Racket && (sportTypes[rowData.Racket.sportType] + \"-\" + rowData.Racket.Brand + \"-\" + rowData.Racket.Name + \"-\" + rowData.Racket.Grip)},\r\n      { title: t('StringBrand.label'), field: 'String.Brand', customSort: (a, b) => compareFunction(a,b,'String.Brand')},\r\n      { title: t('StringName.label'), field: 'String.Name', customSort: (a, b) => compareFunction(a,b,'String.Name')},\r\n      { title: t('StringThickness.label'), field: 'String.Thickness', type: 'numeric'},\r\n      { title: t('StringColor.label'), field: 'String.Color', customSort: (a, b) => compareFunction(a,b,'String.Color')},\r\n      { title: t('StringHardness.label'), field: 'String.Hardness', type: 'numeric'},\r\n   ];\r\n\r\n   const [data, setData] = React.useState([]);\r\n\r\n   const userRole = useSelector(state => state.user.userRole);\r\n   const userId = useSelector(state => state.user.userId);\r\n\r\n   const getStrings = useCallback(() => {\r\n      axios.post(serverUrl + 'service/getStrings',{userRole, userId})\r\n      .then(function (response){\r\n         var td = response.data;\r\n         var tempD = [];\r\n         for(var i = 0 ; i < td.length; i++){\r\n            if(td[i].String !== null){\r\n               tempD.push(td[i]);\r\n            }\r\n         }\r\n         setData(tempD);\r\n      })\r\n      .catch(function (error){\r\n         console.log(error);\r\n      })\r\n   },[userRole, userId]);\r\n\r\n   useEffect(() => {\r\n      getStrings();\r\n   },[getStrings])\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <Card className={classes.cardRoot}>\r\n            <MaterialTable\r\n               title={t('String.label')}\r\n               columns={columns}\r\n               data={data}\r\n               options={{\r\n                  search: false,\r\n                  filtering: true,\r\n                  sorting: true,\r\n                  pageSize: 10,\r\n               }}\r\n               localization={{\r\n                  body: {\r\n                     emptyDataSourceMessage: t('body.emptyDataSourceMessage.label'),\r\n                     addTooltip: t('body.addTooltip.label'),\r\n                     deleteTooltip: t('body.deleteTooltip.label'),\r\n                     editTooltip: t('body.editTooltip.label'),\r\n                     filterRow: {\r\n                        filterTooltip: t('body.filterRow.filterTooltip.label'),\r\n                     },\r\n                     editRow: {\r\n                        deleteText: t('body.editRow.deleteText.label'),\r\n                        cancelTooltip: t('body.editRow.cancelTooltip.label'),\r\n                        saveTooltip: t('body.editRow.saveTooltip.label'),\r\n                     }\r\n                  },\r\n                  grouping: {\r\n                     placeholder: t('grouping.placeholder.label'),\r\n                  },\r\n                  header: {\r\n                     actions: t('header.actions.label'),\r\n                  },\r\n                  pagination: {\r\n                     labelDisplayedRows: t('pagination.labelDisplayedRows.label'),\r\n                     labelRowsSelect: t('pagination.labelRowsSelect.label'),\r\n                     labelRowsPerPage: t('pagination.labelRowsPerPage.label'),\r\n                     firstAriaLabel: t('pagination.firstAriaLabel.label'),\r\n                     firstTooltip: t('pagination.firstTooltip.label'),\r\n                     previousAriaLabel: t('pagination.previousAriaLabel.label'),\r\n                     previousTooltip: t('pagination.previousTooltip.label'),\r\n                     nextAriaLabel: t('pagination.nextAriaLabel.label'),\r\n                     nextTooltip: t('pagination.nextTooltip.label'),\r\n                     lastAriaLabel: t('pagination.lastAriaLabel.label'),\r\n                     lastTooltip: t('pagination.lastTooltip.label'),\r\n                  },\r\n                  toolbar: {\r\n                     addRemoveColumns: t('toolbar.addRemoveColumns.label'),\r\n                     nRowsSelected: t('toolbar.nRowsSelected.label'),\r\n                     showColumnsTitle: t('toolbar.showColumnsTitle.label'),\r\n                     showColumnsAriaLabel: t('toolbar.showColumnsAriaLabel.label'),\r\n                     exportTitle: t('toolbar.exportTitle.label'),\r\n                     exportAriaLabel: t('toolbar.exportAriaLabel.label'),\r\n                     exportName: t('toolbar.exportName.label'),\r\n                     searchTooltip: t('toolbar.searchTooltip.label'),\r\n                     searchPlaceholder: t('toolbar.searchPlaceholder.label'),\r\n                  }\r\n               }}\r\n               editable={{\r\n               onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                     setTimeout(() => {\r\n                     resolve();\r\n                     if (oldData) {\r\n                        const newUserData = {...newData};\r\n                        axios.post(serverUrl + 'service/updateString',{\r\n                           stringInfo: newUserData.String\r\n                        })\r\n                        .then(function (response){\r\n                           getStrings();\r\n                        })\r\n                     }\r\n                     }, 600);\r\n                  }),\r\n               onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                     setTimeout(() => {\r\n                     resolve();\r\n                     axios.post(serverUrl + 'service/deleteString',{\r\n                        stringId: oldData.String.id\r\n                     })\r\n                     .then(function (response){\r\n                        getStrings();\r\n                     })\r\n                     }, 600);\r\n                  }),\r\n               }}\r\n            />\r\n         </Card>\r\n      </div>\r\n   );\r\n}","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","const initialState = {\r\n    signedIn: 0,\r\n    fullName: \"flynn rider\",\r\n    firstName: \"flynn\",\r\n    lastName: \"rider\",\r\n    userId: 0,\r\n    userRole: 1,\r\n};\r\n  \r\nexport const reducer = (state = initialState, action) => {\r\n    const { type, data } = action;\r\n  \r\n    switch (type) {\r\n      case 'Set_UserData':\r\n        return {\r\n          ...state, \r\n          fullName: data.name,\r\n          firstName: data.firstName,\r\n          lastName: data.lastName,\r\n          userId: data.id,\r\n          userRole: data.role,\r\n          signedIn: 1,\r\n        };\r\n      case 'Set_UserLogOut':\r\n        return {\r\n          ...state, \r\n          signedIn: 0,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n};\r\n  ","const initialState = {\r\n    language:\"DE\",\r\n};\r\n  \r\nexport const reducer = (state = initialState, action) => {\r\n    const { type, data } = action;\r\n  \r\n    switch (type) {\r\n      case 'Set_Language':\r\n        return {...state, language: data };\r\n      default:\r\n        return state;\r\n    }\r\n};\r\n  ","/** @format */\r\n\r\nimport { persistCombineReducers } from \"redux-persist\";\r\nimport storage from \"redux-persist/es/storage\";\r\n\r\n// You have to import every reducers and combine them.\r\n\r\nimport { reducer as UserRedux } from \"./UserRedux\";\r\nimport { reducer as ConfigRedux } from \"./ConfigRedux\";\r\nconst config = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [\r\n  ],\r\n};\r\n\r\nexport default persistCombineReducers(config, {\r\n  user: UserRedux,\r\n  config: ConfigRedux,\r\n});\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"../redux/index\";\r\n\r\nimport { persistStore } from 'redux-persist'\r\n\r\nconst middleware = [\r\n    thunk,\r\n    // more middleware\r\n];\r\n\r\nconst store = () => {\r\n    let store = null;\r\n    store = compose(applyMiddleware(...middleware))(createStore)(reducers);\r\n    let persistor = persistStore(store)\r\n    return { store, persistor }\r\n};\r\n  \r\nexport default store();\r\n  ","import i18n from 'i18next'\r\nimport Backend from 'i18next-xhr-backend'\r\nimport { initReactI18next } from 'react-i18next'\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(initReactI18next)\r\n  .init({\r\n    lng: 'en',\r\n    backend: {\r\n      /* translation file path */\r\n      loadPath: './assets/i18n/{{ns}}/{{lng}}.json'\r\n    },\r\n    fallbackLng: 'en',\r\n    debug: true,\r\n    /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\r\n    ns: ['translations'],\r\n    defaultNS: 'translations',\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false,\r\n      formatSeparator: ','\r\n    },\r\n    react: {\r\n      wait: true\r\n    }\r\n  })\r\n\r\nexport default i18n","import React, { Suspense } from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom'  \nimport { ThemeProvider } from '@material-ui/styles';\n\nimport { default as RouteWithLayout } from './components/RouteWithLayout';\nimport { Main as MainLayout } from './layouts';\n\nimport {\n  SignIn as SignInView,\n  ServiceRequest as ServiceRequestView,\n  User as UserView,\n  Account as AccountView,\n  Customer as CustomerView,\n  Racket as RacketView,\n  String as StringView\n} from './pages';\n\nimport theme from './theme';\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport './i18n'\n\nfunction App() {\n  return ( \n    <ThemeProvider theme={theme}>\n      <Provider store={store.store}>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <Suspense fallback={null}>\n            <Router>  \n              <Switch>\n                <RouteWithLayout\n                  component={ServiceRequestView}\n                  exact\n                  layout={MainLayout}\n                  path=\"/servicerequest\"\n                />  \n                <RouteWithLayout\n                  component={UserView}\n                  exact\n                  layout={MainLayout}\n                  path=\"/users\"\n                />\n                <RouteWithLayout\n                  component={AccountView}\n                  exact\n                  layout={MainLayout}\n                  path=\"/account\"\n                />\n                <RouteWithLayout\n                  component={CustomerView}\n                  exact\n                  layout={MainLayout}\n                  path=\"/customer\"\n                />  \n                <RouteWithLayout\n                  component={RacketView}\n                  exact\n                  layout={MainLayout}\n                  path=\"/racket\"\n                />  \n                <RouteWithLayout\n                  component={StringView}\n                  exact\n                  layout={MainLayout}\n                  path=\"/string\"\n                />  \n                <Route path=\"/\" key={1} component={SignInView} />\n              </Switch>\n            </Router>\n          </Suspense>\n        </PersistGate>\n      </Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}